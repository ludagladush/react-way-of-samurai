{"ast":null,"code":"import _objectSpread from\"/Users/ludagladushina/react-apps/react-learning-1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{authAPI}from\"../api/api\";import{stopSubmit}from\"redux-form\";import{getAuthUserData}from\"./auth-reducer\";var INITIALIZED_SUCCESS='INITIALIZED_SUCCESS';var initialState={initialized:false};var appReducer=function appReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case INITIALIZED_SUCCESS:return _objectSpread(_objectSpread({},state),{},{initialized:true});default:return state;}};export var initializedSuccess=function initializedSuccess(){return{type:INITIALIZED_SUCCESS};};export var initializeApp=function initializeApp(){return function(dispatch){var promise=dispatch(getAuthUserData());//dispatch(somethingelse());\n//dispatch(somethingelse());\nPromise.all([promise]).then(function(){dispatch(initializedSuccess());});};};export default appReducer;","map":{"version":3,"sources":["/Users/ludagladushina/react-apps/react-learning-1/src/redux/app-reducer.js"],"names":["authAPI","stopSubmit","getAuthUserData","INITIALIZED_SUCCESS","initialState","initialized","appReducer","state","action","type","initializedSuccess","initializeApp","dispatch","promise","Promise","all","then"],"mappings":"uKAAA,OAAQA,OAAR,KAAsB,YAAtB,CACA,OAAQC,UAAR,KAAyB,YAAzB,CACA,OAAQC,eAAR,KAA8B,gBAA9B,CAEA,GAAMC,CAAAA,mBAAmB,CAAG,qBAA5B,CAGA,GAAIC,CAAAA,YAAY,CAAG,CACfC,WAAW,CAAE,KADE,CAAnB,CAIA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAkC,IAAjCC,CAAAA,KAAiC,2DAAzBH,YAAyB,IAAXI,CAAAA,MAAW,2CACjD,OAAQA,MAAM,CAACC,IAAf,EACI,IAAKN,CAAAA,mBAAL,CACI,sCACOI,KADP,MAEIF,WAAW,CAAE,IAFjB,GAKJ,QACI,MAAOE,CAAAA,KAAP,CARR,CAUH,CAXD,CAaA,MAAO,IAAMG,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,SAAO,CAACD,IAAI,CAAEN,mBAAP,CAAP,EAA3B,CAEP,MAAO,IAAMQ,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,SAAM,UAACC,QAAD,CAAc,CAC7C,GAAIC,CAAAA,OAAO,CAAGD,QAAQ,CAACV,eAAe,EAAhB,CAAtB,CAEA;AACA;AACAY,OAAO,CAACC,GAAR,CAAY,CAACF,OAAD,CAAZ,EACKG,IADL,CACU,UAAM,CACRJ,QAAQ,CAACF,kBAAkB,EAAnB,CAAR,CACH,CAHL,EAIH,CAT4B,EAAtB,CAWP,cAAeJ,CAAAA,UAAf","sourcesContent":["import {authAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\nimport {getAuthUserData} from \"./auth-reducer\";\n\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\n\n\nlet initialState = {\n    initialized: false\n};\n\nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case INITIALIZED_SUCCESS:\n            return {\n                ...state,\n                initialized: true\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\n\nexport const initializeApp = () => (dispatch) => {\n    let promise = dispatch(getAuthUserData());\n\n    //dispatch(somethingelse());\n    //dispatch(somethingelse());\n    Promise.all([promise])\n        .then(() => {\n            dispatch(initializedSuccess());\n        });\n}\n\nexport default appReducer;"]},"metadata":{},"sourceType":"module"}