{"ast":null,"code":"var _jsxFileName = \"/Users/ludagladushina/react-apps/react-learning-1/src/hoc/auth-redirect.js\";\nimport { Redirect } from \"react-router-dom\";\nimport React, { Component } from 'react';\nexport const withAuthRedirect = component => {\n  class RedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 7,\n          columnNumber: 44\n        }\n      });\n      return /*#__PURE__*/React.createElement(Component, Object.assign({}, this.props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 20\n        }\n      }));\n    }\n\n  }\n\n  let mapStateToPropsForRedirect = state => ({\n    isAuth: state.auth.isAuth\n  });\n\n  ConnectedAuthRedirectComponent;\n  return RedirectComponent;\n};","map":{"version":3,"sources":["/Users/ludagladushina/react-apps/react-learning-1/src/hoc/auth-redirect.js"],"names":["Redirect","React","Component","withAuthRedirect","component","RedirectComponent","render","props","isAuth","mapStateToPropsForRedirect","state","auth","ConnectedAuthRedirectComponent"],"mappings":";AAAA,SAASA,QAAT,QAAyB,kBAAzB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,MAAMC,gBAAgB,GAAIC,SAAD,IAAe;AAC3C,QAAMC,iBAAN,SAAgCJ,KAAK,CAACC,SAAtC,CAAgD;AAC5CI,IAAAA,MAAM,GAAG;AACL,UAAI,CAAC,KAAKC,KAAL,CAAWC,MAAhB,EAAwB,oBAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACxB,0BAAO,oBAAC,SAAD,oBAAgB,KAAKD,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACH;;AAJ2C;;AAOhD,MAAIE,0BAA0B,GAAIC,KAAD,KAAY;AACzCF,IAAAA,MAAM,EAAEE,KAAK,CAACC,IAAN,CAAWH;AADsB,GAAZ,CAAjC;;AAIAI,EAAAA,8BAA8B;AAE9B,SAAOP,iBAAP;AACH,CAfM","sourcesContent":["import { Redirect } from \"react-router-dom\"\nimport React, { Component } from 'react';\n\nexport const withAuthRedirect = (component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to='/login' />\n            return <Component { ...this.props } />\n        }\n    }\n\n    let mapStateToPropsForRedirect = (state) => ({\n        isAuth: state.auth.isAuth\n    });\n\n    ConnectedAuthRedirectComponent\n    \n    return RedirectComponent;\n}"]},"metadata":{},"sourceType":"module"}