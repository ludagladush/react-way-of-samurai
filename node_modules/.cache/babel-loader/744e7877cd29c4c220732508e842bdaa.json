{"ast":null,"code":"var _jsxFileName = \"/Users/ludagladushina/react-apps/react-learning-1/src/components/dialogs/dialogs-container.js\";\nimport { sendMessageCreator, updateNewMessageBodyCreator } from '../../redux/dialogs-reducer';\nimport Dialogs from './dialogs';\nimport { connect } from 'react-redux';\n\nlet mapStateToProps = state => {\n  return {\n    dialogsPage: state.dialogsPage,\n    isAuth: state.auth.isAuth\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    updateNewMessage: body => {\n      dispatch(updateNewMessageBodyCreator(body));\n    },\n    sendMessage: () => {\n      dispatch(sendMessageCreator());\n    }\n  };\n};\n\nlet AuthRedirecComponent = props => {\n  if (this.props.isAuth) return /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 35\n    }\n  });\n  return /*#__PURE__*/React.createElement(Dialogs, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }\n  }));\n};\n\n_c = AuthRedirecComponent;\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\nexport default DialogsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthRedirecComponent\");","map":{"version":3,"sources":["/Users/ludagladushina/react-apps/react-learning-1/src/components/dialogs/dialogs-container.js"],"names":["sendMessageCreator","updateNewMessageBodyCreator","Dialogs","connect","mapStateToProps","state","dialogsPage","isAuth","auth","mapDispatchToProps","dispatch","updateNewMessage","body","sendMessage","AuthRedirecComponent","props","DialogsContainer"],"mappings":";AAAA,SAASA,kBAAT,EAA6BC,2BAA7B,QAA+D,6BAA/D;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAGA,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHC,IAAAA,WAAW,EAAED,KAAK,CAACC,WADhB;AAEHC,IAAAA,MAAM,EAAEF,KAAK,CAACG,IAAN,CAAWD;AAFhB,GAAP;AAIH,CALD;;AAOA,IAAIE,kBAAkB,GAAIC,QAAD,IAAc;AACnC,SAAO;AACHC,IAAAA,gBAAgB,EAAGC,IAAD,IAAU;AACxBF,MAAAA,QAAQ,CAACT,2BAA2B,CAACW,IAAD,CAA5B,CAAR;AACH,KAHE;AAIHC,IAAAA,WAAW,EAAE,MAAM;AACfH,MAAAA,QAAQ,CAACV,kBAAkB,EAAnB,CAAR;AACH;AANE,GAAP;AAQH,CATD;;AAWA,IAAIc,oBAAoB,GAAIC,KAAD,IAAW;AAClC,MAAI,KAAKA,KAAL,CAAWR,MAAf,EAAuB,oBAAO,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACvB,sBAAO,oBAAC,OAAD,oBAAcQ,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACH,CAHD;;KAAID,oB;AAKJ,MAAME,gBAAgB,GAAGb,OAAO,CAACC,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CP,OAA7C,CAAzB;AAEA,eAAec,gBAAf","sourcesContent":["import { sendMessageCreator, updateNewMessageBodyCreator} from '../../redux/dialogs-reducer';\nimport Dialogs from './dialogs';\nimport { connect } from 'react-redux';\n\n\nlet mapStateToProps = (state) => {\n    return {\n        dialogsPage: state.dialogsPage,\n        isAuth: state.auth.isAuth\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        updateNewMessage: (body) => {\n            dispatch(updateNewMessageBodyCreator(body));\n        },\n        sendMessage: () => {\n            dispatch(sendMessageCreator());\n        }\n    }\n}\n\nlet AuthRedirecComponent = (props) => {\n    if (this.props.isAuth) return <Redirect to='/login' />\n    return <Dialogs { ...props } />\n}\n\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\n\nexport default DialogsContainer;"]},"metadata":{},"sourceType":"module"}