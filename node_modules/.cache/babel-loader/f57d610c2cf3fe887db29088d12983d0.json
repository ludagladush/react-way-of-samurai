{"ast":null,"code":"var _jsxFileName = \"/Users/ludagladushina/react-apps/react-learning-1/src/components/profile/profile-container.js\";\nimport React from 'react';\nimport Profile from './profile';\nimport { connect } from 'react-redux';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport { getUserProfile } from '../../redux/profile-reducer';\nimport { withAuthRedirect } from '../../hoc/auth-redirect';\n\nclass ProfileContainer extends React.Component {\n  componentDidMount() {\n    let userId = this.props.match.params.userId;\n\n    if (!userId) {\n      userId = 12930;\n    }\n\n    this.props.getUserProfile(userId);\n  }\n\n  render() {\n    if (this.props.isAuth === false) return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 49\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Profile, Object.assign({}, this.props, {\n      profile: this.props.profile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }\n    })));\n  }\n\n}\n\n;\nlet AuthRedirecComponent = withAuthRedirect(ProfileContainer);\n_c = AuthRedirecComponent;\n\nlet mapStateToPropsForRedirect = state => ({\n  isAuth: state.auth.isAuth\n});\n\nAuthRedirecComponent = connect();\n\nlet mapStateToProps = state => ({\n  profile: state.profilePage.profile\n});\n\nlet WithUrlDataContainerComponent = withRouter(AuthRedirecComponent);\n_c2 = WithUrlDataContainerComponent;\nexport default connect(mapStateToProps, {\n  getUserProfile\n})(WithUrlDataContainerComponent);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AuthRedirecComponent\");\n$RefreshReg$(_c2, \"WithUrlDataContainerComponent\");","map":{"version":3,"sources":["/Users/ludagladushina/react-apps/react-learning-1/src/components/profile/profile-container.js"],"names":["React","Profile","connect","withRouter","Redirect","getUserProfile","withAuthRedirect","ProfileContainer","Component","componentDidMount","userId","props","match","params","render","isAuth","profile","AuthRedirecComponent","mapStateToPropsForRedirect","state","auth","mapStateToProps","profilePage","WithUrlDataContainerComponent"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,kBAArC;AACA,SAASC,cAAT,QAA+B,6BAA/B;AACA,SAASC,gBAAT,QAAiC,yBAAjC;;AAIA,MAAMC,gBAAN,SAA+BP,KAAK,CAACQ,SAArC,CAA+C;AAE3CC,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAArC;;AACA,QAAI,CAACA,MAAL,EAAa;AACTA,MAAAA,MAAM,GAAG,KAAT;AACH;;AACD,SAAKC,KAAL,CAAWN,cAAX,CAA0BK,MAA1B;AACH;;AAEDI,EAAAA,MAAM,GAAI;AACN,QAAI,KAAKH,KAAL,CAAWI,MAAX,KAAsB,KAA1B,EAAiC,oBAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACjC,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,OAAD,oBAAc,KAAKJ,KAAnB;AAA2B,MAAA,OAAO,EAAG,KAAKA,KAAL,CAAWK,OAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ,CADJ;AAMH;;AAlB0C;;AAmB9C;AAED,IAAIC,oBAAoB,GAAGX,gBAAgB,CAACC,gBAAD,CAA3C;KAAIU,oB;;AAGJ,IAAIC,0BAA0B,GAAIC,KAAD,KAAY;AACzCJ,EAAAA,MAAM,EAAEI,KAAK,CAACC,IAAN,CAAWL;AADsB,CAAZ,CAAjC;;AAIAE,oBAAoB,GAAGf,OAAO,EAA9B;;AAEA,IAAImB,eAAe,GAAIF,KAAD,KAAY;AAC9BH,EAAAA,OAAO,EAAEG,KAAK,CAACG,WAAN,CAAkBN;AADG,CAAZ,CAAtB;;AAIA,IAAIO,6BAA6B,GAAGpB,UAAU,CAACc,oBAAD,CAA9C;MAAIM,6B;AAEJ,eAAerB,OAAO,CAACmB,eAAD,EAAkB;AAAEhB,EAAAA;AAAF,CAAlB,CAAP,CAA8CkB,6BAA9C,CAAf","sourcesContent":["import React from 'react';\nimport Profile from './profile';\nimport { connect } from 'react-redux';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport { getUserProfile } from '../../redux/profile-reducer';\nimport { withAuthRedirect } from '../../hoc/auth-redirect';\n\n\n\nclass ProfileContainer extends React.Component {\n\n    componentDidMount() {\n        let userId = this.props.match.params.userId;\n        if (!userId) {\n            userId = 12930;\n        }\n        this.props.getUserProfile(userId);\n    }\n\n    render () {\n        if (this.props.isAuth === false) return <Redirect to='/login' />;\n        return (\n            <div>\n                <Profile { ...this.props } profile={ this.props.profile }/>\n                \n          </div>\n        )\n    }\n};\n\nlet AuthRedirecComponent = withAuthRedirect(ProfileContainer);\n \n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n});\n\nAuthRedirecComponent = connect()\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n});\n\nlet WithUrlDataContainerComponent = withRouter(AuthRedirecComponent);\n\nexport default connect(mapStateToProps, { getUserProfile } )(WithUrlDataContainerComponent);"]},"metadata":{},"sourceType":"module"}