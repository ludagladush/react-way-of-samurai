{"ast":null,"code":"import { sendMessageCreator, updateNewMessageBodyCreator } from '../../redux/dialogs-reducer';\nimport Dialogs from './dialogs';\nimport { connect } from 'react-redux';\nimport { withAuthRedirect } from '../../hoc/auth-redirect';\n\nlet mapStateToProps = state => {\n  return {\n    dialogsPage: state.auth.dialogsPage\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    updateNewMessage: body => {\n      dispatch(updateNewMessageBodyCreator(body));\n    },\n    sendMessage: () => {\n      dispatch(sendMessageCreator());\n    }\n  };\n};\n\nlet RedirecComponent = withAuthRedirect(Dialogs);\n_c = RedirecComponent;\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(RedirecComponent);\nexport default DialogsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"RedirecComponent\");","map":{"version":3,"sources":["/Users/ludagladushina/react-apps/react-learning-1/src/components/dialogs/dialogs-container.js"],"names":["sendMessageCreator","updateNewMessageBodyCreator","Dialogs","connect","withAuthRedirect","mapStateToProps","state","dialogsPage","auth","mapDispatchToProps","dispatch","updateNewMessage","body","sendMessage","RedirecComponent","DialogsContainer"],"mappings":"AAAA,SAASA,kBAAT,EAA6BC,2BAA7B,QAA+D,6BAA/D;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,yBAAjC;;AAGA,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHC,IAAAA,WAAW,EAAED,KAAK,CAACE,IAAN,CAAWD;AADrB,GAAP;AAGH,CAJD;;AAMA,IAAIE,kBAAkB,GAAIC,QAAD,IAAc;AACnC,SAAO;AACHC,IAAAA,gBAAgB,EAAGC,IAAD,IAAU;AACxBF,MAAAA,QAAQ,CAACT,2BAA2B,CAACW,IAAD,CAA5B,CAAR;AACH,KAHE;AAIHC,IAAAA,WAAW,EAAE,MAAM;AACfH,MAAAA,QAAQ,CAACV,kBAAkB,EAAnB,CAAR;AACH;AANE,GAAP;AAQH,CATD;;AAWA,IAAIc,gBAAgB,GAAGV,gBAAgB,CAACF,OAAD,CAAvC;KAAIY,gB;AAEJ,MAAMC,gBAAgB,GAAGZ,OAAO,CAACE,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CK,gBAA7C,CAAzB;AAEA,eAAeC,gBAAf","sourcesContent":["import { sendMessageCreator, updateNewMessageBodyCreator} from '../../redux/dialogs-reducer';\nimport Dialogs from './dialogs';\nimport { connect } from 'react-redux';\nimport { withAuthRedirect } from '../../hoc/auth-redirect';\n\n\nlet mapStateToProps = (state) => {\n    return {\n        dialogsPage: state.auth.dialogsPage \n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        updateNewMessage: (body) => {\n            dispatch(updateNewMessageBodyCreator(body));\n        },\n        sendMessage: () => {\n            dispatch(sendMessageCreator());\n        }\n    }\n}\n\nlet RedirecComponent = withAuthRedirect(Dialogs);\n\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(RedirecComponent);\n\nexport default DialogsContainer;"]},"metadata":{},"sourceType":"module"}