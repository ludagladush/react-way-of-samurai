{"ast":null,"code":"const FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nlet state = {\n  users: [{\n    id: 1,\n    photoUrl: 'https://i.pinimg.com/564x/4d/77/e2/4d77e2ffb4b616928c6242b94f6cfefd.jpg',\n    followed: true,\n    fullName: 'Luda',\n    status: 'I am fine',\n    location: {\n      country: 'Ukraine',\n      city: 'Kiev'\n    }\n  }, {\n    id: 2,\n    photoUrl: 'https://i.pinimg.com/564x/4d/77/e2/4d77e2ffb4b616928c6242b94f6cfefd.jpg',\n    followed: false,\n    fullName: 'Sasha',\n    status: 'I am fine too',\n    location: {\n      country: 'Ukraine',\n      city: 'Kiev'\n    }\n  }, {\n    id: 3,\n    photoUrl: 'https://i.pinimg.com/564x/4d/77/e2/4d77e2ffb4b616928c6242b94f6cfefd.jpg',\n    followed: true,\n    fullName: 'Vika',\n    status: 'I am fine too',\n    location: {\n      country: 'Ukraine',\n      city: 'Kiev'\n    }\n  }]\n};\n\nconst usersReducer = (state, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: true\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case UNFOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: false\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case SET_USERS:\n      {\n        return { ...state,\n          users: [...state.users, ...action.users]\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const followAC = userId => ({\n  type: 'FOLLOW',\n  userId\n});\nexport const unfollowAC = userId => ({\n  type: 'UNFOLLOW',\n  userId\n});\nexport const setUsersAC = users => ({\n  type: 'SET_USERS',\n  users\n});\nexport default UsersReducer;","map":{"version":3,"sources":["/Users/ludagladushina/react-apps/react-learning-1/src/redux/users-reducer.js"],"names":["FOLLOW","UNFOLLOW","SET_USERS","state","users","id","photoUrl","followed","fullName","status","location","country","city","usersReducer","action","type","map","u","userId","followAC","unfollowAC","setUsersAC","UsersReducer"],"mappings":"AAAA,MAAMA,MAAM,GAAG,QAAf;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,SAAS,GAAG,WAAlB;AAEA,IAAIC,KAAK,GAAG;AACRC,EAAAA,KAAK,EAAE,CACH;AAAEC,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,QAAQ,EAAE,yEAAnB;AAA8FC,IAAAA,QAAQ,EAAE,IAAxG;AAA8GC,IAAAA,QAAQ,EAAE,MAAxH;AAAgIC,IAAAA,MAAM,EAAE,WAAxI;AAAqJC,IAAAA,QAAQ,EAAE;AAAEC,MAAAA,OAAO,EAAE,SAAX;AAAsBC,MAAAA,IAAI,EAAE;AAA5B;AAA/J,GADG,EAEH;AAAEP,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,QAAQ,EAAE,yEAAnB;AAA8FC,IAAAA,QAAQ,EAAE,KAAxG;AAA+GC,IAAAA,QAAQ,EAAE,OAAzH;AAAkIC,IAAAA,MAAM,EAAE,eAA1I;AAA2JC,IAAAA,QAAQ,EAAE;AAAEC,MAAAA,OAAO,EAAE,SAAX;AAAsBC,MAAAA,IAAI,EAAE;AAA5B;AAArK,GAFG,EAGH;AAAEP,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,QAAQ,EAAE,yEAAnB;AAA8FC,IAAAA,QAAQ,EAAE,IAAxG;AAA8GC,IAAAA,QAAQ,EAAE,MAAxH;AAAgIC,IAAAA,MAAM,EAAE,eAAxI;AAAyJC,IAAAA,QAAQ,EAAE;AAAEC,MAAAA,OAAO,EAAE,SAAX;AAAsBC,MAAAA,IAAI,EAAE;AAA5B;AAAnK,GAHG;AADC,CAAZ;;AAQA,MAAMC,YAAY,GAAG,CAACV,KAAD,EAAQW,MAAR,KAAmB;AAEpC,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKf,MAAL;AACI,aAAO,EACH,GAAGG,KADA;AAEHC,QAAAA,KAAK,EAAED,KAAK,CAACC,KAAN,CAAYY,GAAZ,CAAiBC,CAAC,IAAI;AACzB,cAAIA,CAAC,CAACZ,EAAF,KAASS,MAAM,CAACI,MAApB,EAA4B;AACxB,mBAAO,EAAG,GAAGD,CAAN;AAASV,cAAAA,QAAQ,EAAE;AAAnB,aAAP;AACH;;AACD,iBAAOU,CAAP;AACH,SALM;AAFJ,OAAP;;AAUJ,SAAKhB,QAAL;AACI,aAAO,EACH,GAAGE,KADA;AAEHC,QAAAA,KAAK,EAAED,KAAK,CAACC,KAAN,CAAYY,GAAZ,CAAiBC,CAAC,IAAI;AACzB,cAAIA,CAAC,CAACZ,EAAF,KAASS,MAAM,CAACI,MAApB,EAA4B;AACxB,mBAAO,EAAE,GAAGD,CAAL;AAAQV,cAAAA,QAAQ,EAAE;AAAlB,aAAP;AACH;;AACD,iBAAOU,CAAP;AACH,SALM;AAFJ,OAAP;;AAUJ,SAAKf,SAAL;AAAgB;AACZ,eAAO,EAAE,GAAGC,KAAL;AAAYC,UAAAA,KAAK,EAAE,CAAC,GAAGD,KAAK,CAACC,KAAV,EAAiB,GAAGU,MAAM,CAACV,KAA3B;AAAnB,SAAP;AACH;;AAED;AACA,aAAOD,KAAP;AA5BJ;AA+BH,CAjCD;;AAmCA,OAAO,MAAMgB,QAAQ,GAAID,MAAD,KAAa;AAAEH,EAAAA,IAAI,EAAE,QAAR;AAAkBG,EAAAA;AAAlB,CAAb,CAAjB;AACP,OAAO,MAAME,UAAU,GAAIF,MAAD,KAAa;AAAEH,EAAAA,IAAI,EAAE,UAAR;AAAoBG,EAAAA;AAApB,CAAb,CAAnB;AACP,OAAO,MAAMG,UAAU,GAAIjB,KAAD,KAAY;AAAEW,EAAAA,IAAI,EAAE,WAAR;AAAqBX,EAAAA;AAArB,CAAZ,CAAnB;AAEP,eAAekB,YAAf","sourcesContent":["const FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\n\nlet state = {\n    users: [\n        { id: 1, photoUrl: 'https://i.pinimg.com/564x/4d/77/e2/4d77e2ffb4b616928c6242b94f6cfefd.jpg', followed: true, fullName: 'Luda', status: 'I am fine', location: { country: 'Ukraine', city: 'Kiev' } },\n        { id: 2, photoUrl: 'https://i.pinimg.com/564x/4d/77/e2/4d77e2ffb4b616928c6242b94f6cfefd.jpg', followed: false, fullName: 'Sasha', status: 'I am fine too', location: { country: 'Ukraine', city: 'Kiev' } },\n        { id: 3, photoUrl: 'https://i.pinimg.com/564x/4d/77/e2/4d77e2ffb4b616928c6242b94f6cfefd.jpg', followed: true, fullName: 'Vika', status: 'I am fine too', location: { country: 'Ukraine', city: 'Kiev' } }\n    ]\n}\n\nconst usersReducer = (state, action) => {\n\n    switch(action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users: state.users.map( u => {\n                    if (u.id === action.userId) {\n                        return {  ...u, followed: true }\n                    }\n                    return u;\n                })\n            }          \n\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: state.users.map( u => {\n                    if (u.id === action.userId) {\n                        return { ...u, followed: false }\n                    }\n                    return u;\n                })\n            }\n\n        case SET_USERS: {\n            return { ...state, users: [...state.users, ...action.users] }\n        }\n\n        default: \n        return state;\n\n    }\n};\n\nexport const followAC = (userId) => ({ type: 'FOLLOW', userId });\nexport const unfollowAC = (userId) => ({ type: 'UNFOLLOW', userId });\nexport const setUsersAC = (users) => ({ type: 'SET_USERS', users });\n\nexport default UsersReducer;"]},"metadata":{},"sourceType":"module"}