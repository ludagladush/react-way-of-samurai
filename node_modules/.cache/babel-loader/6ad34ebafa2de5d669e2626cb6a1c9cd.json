{"ast":null,"code":"var _jsxFileName = \"/Users/ludagladushina/react-apps/react-learning-1/src/components/users/users-container.js\";\nimport React from 'react';\nimport * as axios from 'axios';\nimport { connect } from 'react-redux';\nimport Users from './users';\nimport { follow, unfollow, setUsers, setCurrentPage, setTotalUsersCount, toggleIsFetching } from '../../redux/users-reducer';\nimport Preloader from '../preloader/preloader';\nimport { getUsers } from '../../api/api';\n\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      this.props.setCurrentPage(pageNumber); // this.props.toggleIsFetching(true);\n\n      axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`, {\n        withCredentials: true\n      }).then(response => {\n        // this.props.toggleIsFetching(false);\n        this.props.setUsers(response.data.items);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.toggleIsFetching(true);\n    getUsers(this.props.currentPage, this.props.page).then(response => {\n      this.props.toggleIsFetching(false);\n      this.props.setUsers(response.data.items);\n      this.props.setTotalUsersCount(response.data.totalCount);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.props.isFetching ? /*#__PURE__*/React.createElement(Preloader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 39\n      }\n    }) : null, /*#__PURE__*/React.createElement(Users, {\n      totalUsersCount: this.props.totalUsersCount,\n      pageSize: this.props.pageSize,\n      currentPage: this.props.currentPage,\n      onPageChanged: this.props.onPageChanged,\n      users: this.props.users,\n      follow: this.props.follow,\n      unfollow: this.props.unfollow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching\n  };\n};\n\nexport default connect(mapStateToProps, {\n  follow,\n  unfollow,\n  setUsers,\n  setCurrentPage,\n  setTotalUsersCount,\n  toggleIsFetching\n})(UsersContainer);","map":{"version":3,"sources":["/Users/ludagladushina/react-apps/react-learning-1/src/components/users/users-container.js"],"names":["React","axios","connect","Users","follow","unfollow","setUsers","setCurrentPage","setTotalUsersCount","toggleIsFetching","Preloader","getUsers","UsersContainer","Component","onPageChanged","pageNumber","props","get","currentPage","pageSize","withCredentials","then","response","data","items","componentDidMount","page","totalCount","render","isFetching","totalUsersCount","users","mapStateToProps","state","usersPage"],"mappings":"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","sourcesContent":["import React from 'react';\nimport * as axios from 'axios';\nimport { connect } from 'react-redux';\nimport Users from './users';\nimport { follow, unfollow, setUsers, setCurrentPage, setTotalUsersCount, toggleIsFetching } from '../../redux/users-reducer';\nimport Preloader from '../preloader/preloader';\nimport { getUsers } from '../../api/api';\n\nclass UsersContainer extends React.Component {\n\n    componentDidMount() {\n        this.props.toggleIsFetching(true);\n            getUsers(this.props.currentPage, this.props.page).then(response => {\n                this.props.toggleIsFetching(false);\n                this.props.setUsers(response.data.items);\n                this.props.setTotalUsersCount(response.data.totalCount);\n        });\n    }\n\n    onPageChanged = (pageNumber) => {\n        this.props.setCurrentPage(pageNumber); \n        // this.props.toggleIsFetching(true);\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`, {\n            withCredentials: true\n        })\n            .then(response => {\n                // this.props.toggleIsFetching(false);\n                this.props.setUsers(response.data.items);\n                \n                \n        });\n    }\n    \n\n    render() {\n\n        return <>\n            { this.props.isFetching ? <Preloader /> : null }\n            <Users totalUsersCount={ this.props.totalUsersCount} \n                    pageSize={ this.props.pageSize }\n                    currentPage={ this.props.currentPage }\n                    onPageChanged={ this.props.onPageChanged }\n                    users={ this.props.users }\n                    follow={ this.props.follow }\n                    unfollow={ this.props.unfollow }\n            />\n        </>\n    }\n} \n\n\nlet mapStateToProps = (state) => {\n    return {\n        users: state.usersPage.users,\n        pageSize: state.usersPage.pageSize,\n        totalUsersCount: state.usersPage.totalUsersCount,\n        currentPage: state.usersPage.currentPage,\n        isFetching: state.usersPage.isFetching\n    }\n}\n\n\nexport default connect(mapStateToProps, {\n    follow,\n    unfollow,\n    setUsers,\n    setCurrentPage,\n    setTotalUsersCount,\n    toggleIsFetching\n})(UsersContainer);"]},"metadata":{},"sourceType":"module"}