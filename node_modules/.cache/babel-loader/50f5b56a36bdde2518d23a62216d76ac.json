{"ast":null,"code":"import React from'react';import{connect}from'react-redux';import{reduxForm}from'redux-form';import{required}from'../../utils/validators/validators';import{login}from'../../redux/auth-reducer';import{Redirect}from'react-router-dom';import s from'../common/form-controls/forms-control.module.css';import{createField,Input}from'../common/form-controls/forms-control';var LoginForm=function LoginForm(_ref){var handleSubmit=_ref.handleSubmit,error=_ref.error;return/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleSubmit},createField(\"Email\",\"email\",[required],Input),createField(\"Password\",\"password\",[required],Input,{type:\"password\"}),createField(null,\"rememberMe\",[],Input,{type:\"checkbox\"},\"remember me\"),error&&/*#__PURE__*/React.createElement(\"div\",{className:s.formSummaryError},error),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"button\",null,\"Login\")));};var LoginReduxForm=reduxForm({form:'login'})(LoginForm);var Login=function Login(props){var onSubmit=function onSubmit(formData){props.login(formData.email,formData.password,formData.rememberMe);};if(props.isAuth){return/*#__PURE__*/React.createElement(Redirect,{to:'/profile'});}return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h1\",null,\"Login\"),/*#__PURE__*/React.createElement(LoginReduxForm,{onSubmit:onSubmit}));};var mapStateToProps=function mapStateToProps(state){return{isAuth:state.auth.isAuth};};export default connect(mapStateToProps,{login:login})(Login);","map":{"version":3,"sources":["/Users/ludagladushina/react-apps/react-learning-1/src/components/login/login.js"],"names":["React","connect","reduxForm","required","login","Redirect","s","createField","Input","LoginForm","handleSubmit","error","type","formSummaryError","LoginReduxForm","form","Login","props","onSubmit","formData","email","password","rememberMe","isAuth","mapStateToProps","state","auth"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,SAAT,KAA0B,YAA1B,CACA,OAASC,QAAT,KAAyB,mCAAzB,CACA,OAASC,KAAT,KAAsB,0BAAtB,CACA,OAASC,QAAT,KAAyB,kBAAzB,CACA,MAAOC,CAAAA,CAAP,KAAc,kDAAd,CACA,OAASC,WAAT,CAAsBC,KAAtB,KAAmC,uCAAnC,CAGA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAA6B,IAA1BC,CAAAA,YAA0B,MAA1BA,YAA0B,CAAZC,KAAY,MAAZA,KAAY,CAC3C,mBACI,4BAAM,QAAQ,CAAGD,YAAjB,EACKH,WAAW,CAAC,OAAD,CAAU,OAAV,CAAmB,CAACJ,QAAD,CAAnB,CAA+BK,KAA/B,CADhB,CAEKD,WAAW,CAAC,UAAD,CAAa,UAAb,CAAyB,CAACJ,QAAD,CAAzB,CAAqCK,KAArC,CAA4C,CAACI,IAAI,CAAE,UAAP,CAA5C,CAFhB,CAGKL,WAAW,CAAC,IAAD,CAAO,YAAP,CAAqB,EAArB,CAAyBC,KAAzB,CAAgC,CAACI,IAAI,CAAE,UAAP,CAAhC,CAAoD,aAApD,CAHhB,CAoBMD,KAAK,eAAI,2BAAK,SAAS,CAAGL,CAAC,CAACO,gBAAnB,EACJF,KADI,CApBf,cAuBI,4CACI,0CADJ,CAvBJ,CADJ,CA6BH,CA9BD,CAgCA,GAAMG,CAAAA,cAAc,CAAGZ,SAAS,CAAC,CAACa,IAAI,CAAE,OAAP,CAAD,CAAT,CAA2BN,SAA3B,CAAvB,CAEA,GAAMO,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,KAAD,CAAW,CACrB,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,QAAD,CAAc,CAC3BF,KAAK,CAACb,KAAN,CAAYe,QAAQ,CAACC,KAArB,CAA4BD,QAAQ,CAACE,QAArC,CAA+CF,QAAQ,CAACG,UAAxD,EACH,CAFD,CAIA,GAAIL,KAAK,CAACM,MAAV,CAAkB,CACd,mBAAO,oBAAC,QAAD,EAAU,EAAE,CAAE,UAAd,EAAP,CACH,CAED,mBAAO,4CACH,sCADG,cAEH,oBAAC,cAAD,EAAgB,QAAQ,CAAGL,QAA3B,EAFG,CAAP,CAIH,CAbD,CAeA,GAAMM,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAY,CAChCF,MAAM,CAAEE,KAAK,CAACC,IAAN,CAAWH,MADa,CAAZ,EAAxB,CAIA,cAAetB,CAAAA,OAAO,CAACuB,eAAD,CAAkB,CAAEpB,KAAK,CAALA,KAAF,CAAlB,CAAP,CAAqCY,KAArC,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm } from 'redux-form';\nimport { required } from '../../utils/validators/validators';\nimport { login } from '../../redux/auth-reducer';\nimport { Redirect } from 'react-router-dom';\nimport s from '../common/form-controls/forms-control.module.css';\nimport { createField, Input } from '../common/form-controls/forms-control';\n\n\nconst LoginForm = ({ handleSubmit, error }) => {\n    return (\n        <form onSubmit={ handleSubmit }>\n            {createField(\"Email\", \"email\", [required], Input)}\n            {createField(\"Password\", \"password\", [required], Input, {type: \"password\"})}\n            {createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"remember me\")}\n            {/* <div> */}\n                {/* <Field placeholder={ 'Email' } \n                        validate={ [required] } \n                        component={ Input } \n                        name={ 'email' }/>\n            </div>\n            <div>\n                <Field placeholder={ 'Password ' } \n                        validate={ [required] } \n                        component={ Input }\n                        type={ 'password' } \n                        name={ 'password' }/>\n            </div>\n            <div>\n                <Field  type={ 'checkbox' } component={ Input } name={ 'rememberMe' }/> remember me\n            </div> */}\n            { error && <div className={ s.formSummaryError }>\n                {  error }\n            </div> } \n            <div>\n                <button>Login</button>\n            </div>\n        </form>\n    )\n}\n\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\n\nconst Login = (props) => {\n    const onSubmit = (formData) => {\n        props.login(formData.email, formData.password, formData.rememberMe);\n    }\n\n    if (props.isAuth) {\n        return <Redirect to={'/profile'} />\n    }\n    \n    return <div>\n        <h1>Login</h1>\n        <LoginReduxForm onSubmit={ onSubmit }/>\n    </div>\n}\n\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth\n})\n\nexport default connect(mapStateToProps, { login } )(Login);"]},"metadata":{},"sourceType":"module"}