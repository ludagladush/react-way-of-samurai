{"ast":null,"code":"const FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nlet initialState = {\n  users: []\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: true\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case UNFOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: false\n            };\n          }\n\n          return u;\n        })\n      };\n    // case SET_USERS: {\n    //     return { ...state, users: [ ...state.users, ...action.users  ] };\n    // }\n\n    default:\n      return state;\n  }\n};\n\nexport let followAC = userId => ({\n  type: 'FOLLOW',\n  userId\n});\nexport let unfollowAC = userId => ({\n  type: 'UNFOLLOW',\n  userId\n});\nexport let setUsersAC = users => ({\n  type: 'SET_USERS',\n  users\n});\nexport default usersReducer;","map":{"version":3,"sources":["/Users/ludagladushina/react-apps/react-learning-1/src/redux/users-reducer.js"],"names":["FOLLOW","UNFOLLOW","SET_USERS","initialState","users","usersReducer","state","action","type","map","u","id","userId","followed","followAC","unfollowAC","setUsersAC"],"mappings":"AAAA,MAAMA,MAAM,GAAG,QAAf;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,SAAS,GAAG,WAAlB;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,KAAK,EAAE;AADQ,CAAnB;;AAIA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAEnD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKR,MAAL;AACI,aAAO,EACH,GAAGM,KADA;AAEHF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYK,GAAZ,CAAiBC,CAAC,IAAI;AACzB,cAAIA,CAAC,CAACC,EAAF,KAASJ,MAAM,CAACK,MAApB,EAA4B;AACxB,mBAAO,EAAG,GAAGF,CAAN;AAASG,cAAAA,QAAQ,EAAE;AAAnB,aAAP;AACH;;AACD,iBAAOH,CAAP;AACH,SALM;AAFJ,OAAP;;AAUJ,SAAKT,QAAL;AACI,aAAO,EACH,GAAGK,KADA;AAEHF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYK,GAAZ,CAAiBC,CAAC,IAAI;AACzB,cAAIA,CAAC,CAACC,EAAF,KAASJ,MAAM,CAACK,MAApB,EAA4B;AACxB,mBAAO,EAAE,GAAGF,CAAL;AAAQG,cAAAA,QAAQ,EAAE;AAAlB,aAAP;AACH;;AACD,iBAAOH,CAAP;AACH,SALM;AAFJ,OAAP;AAUJ;AACA;AACA;;AAEA;AACI,aAAOJ,KAAP;AA5BR;AA+BH,CAjCD;;AAmCA,OAAO,IAAIQ,QAAQ,GAAIF,MAAD,KAAa;AAAEJ,EAAAA,IAAI,EAAE,QAAR;AAAkBI,EAAAA;AAAlB,CAAb,CAAf;AACP,OAAO,IAAIG,UAAU,GAAIH,MAAD,KAAa;AAAEJ,EAAAA,IAAI,EAAE,UAAR;AAAoBI,EAAAA;AAApB,CAAb,CAAjB;AACP,OAAO,IAAII,UAAU,GAAIZ,KAAD,KAAY;AAAEI,EAAAA,IAAI,EAAE,WAAR;AAAqBJ,EAAAA;AAArB,CAAZ,CAAjB;AAGP,eAAeC,YAAf","sourcesContent":["const FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\n\nlet initialState = {\n    users: []\n}\n\nconst usersReducer = (state = initialState, action) => {\n\n    switch(action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users: state.users.map( u => {\n                    if (u.id === action.userId) {\n                        return {  ...u, followed: true }\n                    }\n                    return u;\n                })\n            }          \n\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: state.users.map( u => {\n                    if (u.id === action.userId) {\n                        return { ...u, followed: false }\n                    }\n                    return u;\n                })\n            }\n\n        // case SET_USERS: {\n        //     return { ...state, users: [ ...state.users, ...action.users  ] };\n        // }\n\n        default: \n            return state;\n\n    }\n};\n\nexport let followAC = (userId) => ({ type: 'FOLLOW', userId });\nexport let unfollowAC = (userId) => ({ type: 'UNFOLLOW', userId });\nexport let setUsersAC = (users) => ({ type: 'SET_USERS', users })\n\n\nexport default usersReducer;"]},"metadata":{},"sourceType":"module"}