{"ast":null,"code":"var _jsxFileName = \"/Users/ludagladushina/react-apps/react-learning-1/src/components/profile/my-posts/my-posts-container.js\";\nimport React from 'react';\nimport { addPostActionCreator, updateNewPostTextActionCreator } from '../../../redux/profile-reducer';\nimport MyPosts from './my-posts';\n\nconst MyPostsContainer = props => {\n  let addPost = () => {\n    props.store.dispatch(addPostActionCreator());\n  };\n\n  let onPostChange = text => {\n    let action = updateNewPostTextActionCreator(text);\n    props.store.dispatch(action);\n  };\n\n  return /*#__PURE__*/React.createElement(MyPosts, {\n    updateNewPostText: onPostChange,\n    addPost: addPost,\n    posts: props.store.getState(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  });\n};\n\n_c = MyPostsContainer;\nexport default MyPostsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyPostsContainer\");","map":{"version":3,"sources":["/Users/ludagladushina/react-apps/react-learning-1/src/components/profile/my-posts/my-posts-container.js"],"names":["React","addPostActionCreator","updateNewPostTextActionCreator","MyPosts","MyPostsContainer","props","addPost","store","dispatch","onPostChange","text","action","getState"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,oBAAT,EAA+BC,8BAA/B,QAAqE,gCAArE;AACA,OAAOC,OAAP,MAAoB,YAApB;;AAEA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAEhC,MAAIC,OAAO,GAAG,MAAM;AAChBD,IAAAA,KAAK,CAACE,KAAN,CAAYC,QAAZ,CAAqBP,oBAAoB,EAAzC;AACH,GAFD;;AAIA,MAAIQ,YAAY,GAAIC,IAAD,IAAU;AACzB,QAAIC,MAAM,GAAGT,8BAA8B,CAACQ,IAAD,CAA3C;AACAL,IAAAA,KAAK,CAACE,KAAN,CAAYC,QAAZ,CAAqBG,MAArB;AACH,GAHD;;AAKA,sBAAQ,oBAAC,OAAD;AACI,IAAA,iBAAiB,EAAGF,YADxB;AAEI,IAAA,OAAO,EAAGH,OAFd;AAGI,IAAA,KAAK,EAAGD,KAAK,CAACE,KAAN,CAAYK,QAAZ,EAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAR;AAKH,CAhBD;;KAAMR,gB;AAkBN,eAAeA,gBAAf","sourcesContent":["import React from 'react';\nimport { addPostActionCreator, updateNewPostTextActionCreator } from '../../../redux/profile-reducer';\nimport MyPosts from './my-posts';\n\nconst MyPostsContainer = (props) => {\n    \n    let addPost = () => {\n        props.store.dispatch(addPostActionCreator());\n    }\n\n    let onPostChange = (text) => {\n        let action = updateNewPostTextActionCreator(text);\n        props.store.dispatch(action);\n    }\n\n    return (<MyPosts \n                updateNewPostText={ onPostChange } \n                addPost={ addPost }\n                posts={ props.store.getState() }\n            />)\n}\n\nexport default MyPostsContainer;\n    "]},"metadata":{},"sourceType":"module"}