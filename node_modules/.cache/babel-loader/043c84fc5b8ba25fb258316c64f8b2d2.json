{"ast":null,"code":"var _jsxFileName = \"/Users/ludagladushina/react-apps/react-learning-1/src/components/users/users-container.js\";\nimport React from 'react';\nimport * as axios from 'axios';\nimport { connect } from 'react-redux';\nimport Users from './users';\nimport { follow, unfollow, setUsers, setCurrentPage, setTotalUsersCount, toggleIsFetching } from '../../redux/users-reducer';\nimport Preloader from '../preloader/preloader';\n\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      this.props.setCurrentPage(pageNumber);\n      this.props.toggleIsFetching(true);\n      axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {\n        console.log(response.data.items);\n        this.props.toggleIsFetching(false);\n        this.props.setUsers(response.data.items);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.toggleIsFetching(true);\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {\n      this.props.toggleIsFetching(false);\n      this.props.setUsers(response.data.items);\n      this.props.setTotalUsersCount(response.data.totalCount);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.props.isFetching ? /*#__PURE__*/React.createElement(Preloader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 39\n      }\n    }) : null, /*#__PURE__*/React.createElement(Users, {\n      totalUsersCount: this.props.totalUsersCount,\n      pagesSize: this.props.pageSize,\n      currentPage: this.props.currentPage,\n      onPageChanged: this.props.onPageChanged,\n      users: this.props.users,\n      follow: this.props.follow,\n      unfollow: this.props.unfollow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching\n  };\n}; // let mapDispatchToProps = (dispatch) => {\n//     return {\n//         follow: followAC,\n//         unfollow: (userId) => {\n//             dispatch(unfollowAC(userId));\n//         },\n//         setUsers: (users) => {\n//             dispatch(setUsersAC(users));\n//         },\n//         setCurrentPage: (pageNumber) => {\n//             dispatch(setCurrentPageAC(pageNumber))\n//         },\n//         setTotalUsersCount: (totalCount) => {\n//             dispatch(setUsersTotalCountAC(totalCount))\n//         },\n//         toggleIsFetching: (isFetching) => {\n//             dispatch(toggleIsFetchingAC(isFetching));\n//         }\n//     }\n// }\n\n\nexport default connect(mapStateToProps, {\n  follow,\n  unfollow,\n  setUsers: setUsersAC,\n  setCurrentPage: setCurrentPageAC,\n  setTotalUsersCount: setTotalUsersCountAC,\n  toggleIsFetching: toggleIsFetchingAC\n})(UsersContainer);","map":{"version":3,"sources":["/Users/ludagladushina/react-apps/react-learning-1/src/components/users/users-container.js"],"names":["React","axios","connect","Users","follow","unfollow","setUsers","setCurrentPage","setTotalUsersCount","toggleIsFetching","Preloader","UsersContainer","Component","onPageChanged","pageNumber","props","get","currentPage","pageSize","then","response","console","log","data","items","componentDidMount","totalCount","render","isFetching","totalUsersCount","users","mapStateToProps","state","usersPage","setUsersAC","setCurrentPageAC","setTotalUsersCountAC","toggleIsFetchingAC"],"mappings":"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","sourcesContent":["import React from 'react';\nimport * as axios from 'axios';\nimport { connect } from 'react-redux';\nimport Users from './users';\nimport { follow, unfollow, setUsers, setCurrentPage, setTotalUsersCount, toggleIsFetching } from '../../redux/users-reducer';\nimport Preloader from '../preloader/preloader';\n\nclass UsersContainer extends React.Component {\n\n    componentDidMount() {\n        this.props.toggleIsFetching(true);\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`)\n            .then(response => {\n                this.props.toggleIsFetching(false);\n                this.props.setUsers(response.data.items);\n                this.props.setTotalUsersCount(response.data.totalCount);\n        });\n    }\n\n    onPageChanged = (pageNumber) => {\n        this.props.setCurrentPage(pageNumber); \n        this.props.toggleIsFetching(true);\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`)\n            .then(response => {\n                console.log(response.data.items)\n                this.props.toggleIsFetching(false);\n                this.props.setUsers(response.data.items);\n                \n        });\n    }\n    \n\n    render() {\n        return <>\n            { this.props.isFetching ? <Preloader /> : null }\n            <Users totalUsersCount={ this.props.totalUsersCount} \n                    pagesSize={ this.props.pageSize }\n                    currentPage={ this.props.currentPage }\n                    onPageChanged={ this.props.onPageChanged }\n                    users={ this.props.users }\n                    follow={ this.props.follow }\n                    unfollow={ this.props.unfollow }\n            />\n        </>\n    }\n} \n\n\nlet mapStateToProps = (state) => {\n    return {\n        users: state.usersPage.users,\n        pageSize: state.usersPage.pageSize,\n        totalUsersCount: state.usersPage.totalUsersCount,\n        currentPage: state.usersPage.currentPage,\n        isFetching: state.usersPage.isFetching\n    }\n}\n\n// let mapDispatchToProps = (dispatch) => {\n//     return {\n//         follow: followAC,\n//         unfollow: (userId) => {\n//             dispatch(unfollowAC(userId));\n//         },\n//         setUsers: (users) => {\n//             dispatch(setUsersAC(users));\n//         },\n//         setCurrentPage: (pageNumber) => {\n//             dispatch(setCurrentPageAC(pageNumber))\n//         },\n//         setTotalUsersCount: (totalCount) => {\n//             dispatch(setUsersTotalCountAC(totalCount))\n//         },\n//         toggleIsFetching: (isFetching) => {\n//             dispatch(toggleIsFetchingAC(isFetching));\n//         }\n//     }\n// }\n\n\nexport default connect(mapStateToProps, {\n    follow,\n    unfollow,\n    setUsers: setUsersAC,\n    setCurrentPage: setCurrentPageAC,\n    setTotalUsersCount: setTotalUsersCountAC,\n    toggleIsFetching: toggleIsFetchingAC\n})(UsersContainer);"]},"metadata":{},"sourceType":"module"}