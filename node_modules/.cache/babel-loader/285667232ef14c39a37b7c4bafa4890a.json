{"ast":null,"code":"var _jsxFileName = \"/Users/ludagladushina/react-apps/react-learning-1/src/components/users/users-container.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Users from './users';\nimport { follow, unfollow, setCurrentPage, setTotalUsersCount, toggleIsFetching, toggleFollowingProgress, getUsersThunkCreator } from '../../redux/users-reducer';\nimport Preloader from '../preloader/preloader';\n\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      this.props.getUsers(pageNumber, this.props.pageSize);\n    };\n  }\n\n  componentDidMount() {\n    this.props.getUsers(this.props.currentPage, this.props.pageSize);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.props.isFetching ? /*#__PURE__*/React.createElement(Preloader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 39\n      }\n    }) : null, /*#__PURE__*/React.createElement(Users, {\n      totalUsersCount: this.props.totalUsersCount,\n      pageSize: this.props.pageSize,\n      currentPage: this.props.currentPage,\n      onPageChanged: this.onPageChanged,\n      users: this.props.users,\n      follow: this.props.follow,\n      unfollow: this.props.unfollow,\n      followingInProgress: this.props.followingInProgress,\n      toggleFollowingProgress: this.props.toggleFollowingProgress,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching,\n    followingInProgress: state.usersPage.followingInProgress\n  };\n};\n\nexport default connect(mapStateToProps, {\n  follow,\n  unfollow,\n  setCurrentPage,\n  toggleFollowingProgress,\n  getUsers\n})(UsersContainer);","map":{"version":3,"sources":["/Users/ludagladushina/react-apps/react-learning-1/src/components/users/users-container.js"],"names":["React","connect","Users","follow","unfollow","setCurrentPage","setTotalUsersCount","toggleIsFetching","toggleFollowingProgress","getUsersThunkCreator","Preloader","UsersContainer","Component","onPageChanged","pageNumber","props","getUsers","pageSize","componentDidMount","currentPage","render","isFetching","totalUsersCount","users","followingInProgress","mapStateToProps","state","usersPage"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,cAA3B,EAA2CC,kBAA3C,EAA+DC,gBAA/D,EAAiFC,uBAAjF,EAA0GC,oBAA1G,QAAsI,2BAAtI;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;AAEA,MAAMC,cAAN,SAA6BX,KAAK,CAACY,SAAnC,CAA6C;AAAA;AAAA;;AAAA,SAMzCC,aANyC,GAMxBC,UAAD,IAAgB;AAC5B,WAAKC,KAAL,CAAWC,QAAX,CAAoBF,UAApB,EAAgC,KAAKC,KAAL,CAAWE,QAA3C;AACH,KARwC;AAAA;;AAEzCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKH,KAAL,CAAWC,QAAX,CAAoB,KAAKD,KAAL,CAAWI,WAA/B,EAA4C,KAAKJ,KAAL,CAAWE,QAAvD;AACH;;AAODG,EAAAA,MAAM,GAAG;AAEL,wBAAO,0CACD,KAAKL,KAAL,CAAWM,UAAX,gBAAwB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAxB,GAAwC,IADvC,eAEH,oBAAC,KAAD;AAAO,MAAA,eAAe,EAAG,KAAKN,KAAL,CAAWO,eAApC;AACQ,MAAA,QAAQ,EAAG,KAAKP,KAAL,CAAWE,QAD9B;AAEQ,MAAA,WAAW,EAAG,KAAKF,KAAL,CAAWI,WAFjC;AAGQ,MAAA,aAAa,EAAG,KAAKN,aAH7B;AAIQ,MAAA,KAAK,EAAG,KAAKE,KAAL,CAAWQ,KAJ3B;AAKQ,MAAA,MAAM,EAAG,KAAKR,KAAL,CAAWZ,MAL5B;AAMQ,MAAA,QAAQ,EAAG,KAAKY,KAAL,CAAWX,QAN9B;AAOQ,MAAA,mBAAmB,EAAG,KAAKW,KAAL,CAAWS,mBAPzC;AAQQ,MAAA,uBAAuB,EAAG,KAAKT,KAAL,CAAWP,uBAR7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFG,CAAP;AAaH;;AA1BwC;;AA8B7C,IAAIiB,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHH,IAAAA,KAAK,EAAEG,KAAK,CAACC,SAAN,CAAgBJ,KADpB;AAEHN,IAAAA,QAAQ,EAAES,KAAK,CAACC,SAAN,CAAgBV,QAFvB;AAGHK,IAAAA,eAAe,EAAEI,KAAK,CAACC,SAAN,CAAgBL,eAH9B;AAIHH,IAAAA,WAAW,EAAEO,KAAK,CAACC,SAAN,CAAgBR,WAJ1B;AAKHE,IAAAA,UAAU,EAAEK,KAAK,CAACC,SAAN,CAAgBN,UALzB;AAMHG,IAAAA,mBAAmB,EAAEE,KAAK,CAACC,SAAN,CAAgBH;AANlC,GAAP;AAQH,CATD;;AAYA,eAAevB,OAAO,CAACwB,eAAD,EAAkB;AACpCtB,EAAAA,MADoC;AAEpCC,EAAAA,QAFoC;AAGpCC,EAAAA,cAHoC;AAIpCG,EAAAA,uBAJoC;AAKpCQ,EAAAA;AALoC,CAAlB,CAAP,CAMZL,cANY,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport Users from './users';\nimport { follow, unfollow, setCurrentPage, setTotalUsersCount, toggleIsFetching, toggleFollowingProgress, getUsersThunkCreator } from '../../redux/users-reducer';\nimport Preloader from '../preloader/preloader';\n\nclass UsersContainer extends React.Component {\n\n    componentDidMount() {\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);   \n    }\n\n    onPageChanged = (pageNumber) => {\n        this.props.getUsers(pageNumber, this.props.pageSize);    \n    }\n    \n\n    render() {\n\n        return <>\n            { this.props.isFetching ? <Preloader /> : null }\n            <Users totalUsersCount={ this.props.totalUsersCount} \n                    pageSize={ this.props.pageSize }\n                    currentPage={ this.props.currentPage }\n                    onPageChanged={ this.onPageChanged }\n                    users={ this.props.users }\n                    follow={ this.props.follow }\n                    unfollow={ this.props.unfollow }\n                    followingInProgress={ this.props.followingInProgress }\n                    toggleFollowingProgress={ this.props.toggleFollowingProgress }\n            />\n        </>\n    }\n} \n\n\nlet mapStateToProps = (state) => {\n    return {\n        users: state.usersPage.users,\n        pageSize: state.usersPage.pageSize,\n        totalUsersCount: state.usersPage.totalUsersCount,\n        currentPage: state.usersPage.currentPage,\n        isFetching: state.usersPage.isFetching,\n        followingInProgress: state.usersPage.followingInProgress\n    }\n}\n\n\nexport default connect(mapStateToProps, {\n    follow,\n    unfollow,\n    setCurrentPage,\n    toggleFollowingProgress,\n    getUsers\n})(UsersContainer);"]},"metadata":{},"sourceType":"module"}