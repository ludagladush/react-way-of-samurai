{"ast":null,"code":"import _defineProperty from\"/Users/ludagladushina/react-apps/react-learning-1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _slicedToArray from\"/Users/ludagladushina/react-apps/react-learning-1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";// import React from 'react';\n// import styles from \"./paginator.module.css\";\n// let Paginator = ({totalUsersCount, pageSize, currentPage, onPageChanged}) => {\n//     let pagesCount = Math.ceil(totalUsersCount / pageSize);\n//     let pages = [];\n//     for (let i = 1; i <= pagesCount; i++) {\n//         pages.push(i);\n//     }\n//     return <div>\n//             {pages.map(p => {\n//                 return <span className={currentPage === p && styles.selectedPage}\n//                              onClick={(e) => {\n//                                  onPageChanged(p);\n//                              }}>{p}</span>\n//             })}\n//         </div>\n// }\n// export default Paginator;\nimport React,{useState}from'react';import styles from\"./paginator.module.css\";import cn from\"classnames\";var Paginator=function Paginator(_ref){var totalItemsCount=_ref.totalItemsCount,pageSize=_ref.pageSize,currentPage=_ref.currentPage,onPageChanged=_ref.onPageChanged,_ref$portionSize=_ref.portionSize,portionSize=_ref$portionSize===void 0?10:_ref$portionSize;var pagesCount=Math.ceil(totalItemsCount/pageSize);var pages=[];for(var i=1;i<=pagesCount;i++){pages.push(i);}var portionCount=Math.ceil(pagesCount/portionSize);var _useState=useState(1),_useState2=_slicedToArray(_useState,2),portionNumber=_useState2[0],setPortionNumber=_useState2[1];var leftPortionPageNumber=(portionNumber-1)*portionSize+1;var rightPortionPageNumber=portionNumber*portionSize;return/*#__PURE__*/React.createElement(\"div\",{className:styles.paginator},portionNumber>1&&/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){setPortionNumber(portionNumber-1);}},\"PREV\"),pages.filter(function(p){return p>=leftPortionPageNumber&&p<=rightPortionPageNumber;}).map(function(p){return/*#__PURE__*/React.createElement(\"span\",{className:cn(_defineProperty({},styles.selectedPage,currentPage===p),styles.pageNumber),key:p,onClick:function onClick(e){onPageChanged(p);}},p);}),portionCount>portionNumber&&/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){setPortionNumber(portionNumber+1);}},\"NEXT\"));};export default Paginator;","map":{"version":3,"sources":["/Users/ludagladushina/react-apps/react-learning-1/src/components/common/paginator/paginator.js"],"names":["React","useState","styles","cn","Paginator","totalItemsCount","pageSize","currentPage","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","filter","p","map","selectedPage","pageNumber","e"],"mappings":"kVAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,MAAOC,CAAAA,MAAP,KAAmB,wBAAnB,CACA,MAAOC,CAAAA,EAAP,KAAe,YAAf,CAEA,GAAIC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAA+E,IAA7EC,CAAAA,eAA6E,MAA7EA,eAA6E,CAA5DC,QAA4D,MAA5DA,QAA4D,CAAlDC,WAAkD,MAAlDA,WAAkD,CAArCC,aAAqC,MAArCA,aAAqC,uBAAtBC,WAAsB,CAAtBA,WAAsB,2BAAR,EAAQ,kBAE3F,GAAIC,CAAAA,UAAU,CAAGC,IAAI,CAACC,IAAL,CAAUP,eAAe,CAAGC,QAA5B,CAAjB,CAEA,GAAIO,CAAAA,KAAK,CAAG,EAAZ,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,EAAIJ,UAArB,CAAiCI,CAAC,EAAlC,CAAsC,CAClCD,KAAK,CAACE,IAAN,CAAWD,CAAX,EACH,CAED,GAAIE,CAAAA,YAAY,CAAGL,IAAI,CAACC,IAAL,CAAUF,UAAU,CAAGD,WAAvB,CAAnB,CAT2F,cAUnDR,QAAQ,CAAC,CAAD,CAV2C,wCAUtFgB,aAVsF,eAUvEC,gBAVuE,eAW3F,GAAIC,CAAAA,qBAAqB,CAAG,CAACF,aAAa,CAAG,CAAjB,EAAsBR,WAAtB,CAAoC,CAAhE,CACA,GAAIW,CAAAA,sBAAsB,CAAGH,aAAa,CAAGR,WAA7C,CAGA,mBAAO,2BAAK,SAAS,CAAEP,MAAM,CAACmB,SAAvB,EACDJ,aAAa,CAAG,CAAhB,eACF,8BAAQ,OAAO,CAAE,kBAAM,CAAEC,gBAAgB,CAACD,aAAa,CAAG,CAAjB,CAAhB,CAAqC,CAA9D,SAFG,CAIEJ,KAAK,CACDS,MADJ,CACW,SAAAC,CAAC,QAAIA,CAAAA,CAAC,EAAIJ,qBAAL,EAA8BI,CAAC,EAAEH,sBAArC,EADZ,EAEII,GAFJ,CAEQ,SAACD,CAAD,CAAO,CACZ,mBAAO,4BAAM,SAAS,CAAGpB,EAAE,oBACtBD,MAAM,CAACuB,YADe,CACAlB,WAAW,GAAKgB,CADhB,EAExBrB,MAAM,CAACwB,UAFiB,CAApB,CAGM,GAAG,CAAEH,CAHX,CAIM,OAAO,CAAE,iBAACI,CAAD,CAAO,CACZnB,aAAa,CAACe,CAAD,CAAb,CACH,CANP,EAMUA,CANV,CAAP,CAOH,CAVA,CAJF,CAeDP,YAAY,CAAGC,aAAf,eACE,8BAAQ,OAAO,CAAE,kBAAM,CAAEC,gBAAgB,CAACD,aAAa,CAAG,CAAjB,CAAhB,CAAqC,CAA9D,SAhBD,CAAP,CAoBH,CAnCD,CAqCA,cAAeb,CAAAA,SAAf","sourcesContent":["// import React from 'react';\n// import styles from \"./paginator.module.css\";\n\n// let Paginator = ({totalUsersCount, pageSize, currentPage, onPageChanged}) => {\n//     let pagesCount = Math.ceil(totalUsersCount / pageSize);\n\n//     let pages = [];\n//     for (let i = 1; i <= pagesCount; i++) {\n//         pages.push(i);\n//     }\n\n//     return <div>\n//             {pages.map(p => {\n//                 return <span className={currentPage === p && styles.selectedPage}\n//                              onClick={(e) => {\n//                                  onPageChanged(p);\n//                              }}>{p}</span>\n//             })}\n//         </div>\n// }\n\n// export default Paginator;\n\nimport React, {useState} from 'react';\nimport styles from \"./paginator.module.css\";\nimport cn from \"classnames\";\n\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\n\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\n\n    let pages = [];\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i);\n    }\n\n    let portionCount = Math.ceil(pagesCount / portionSize);\n    let [portionNumber, setPortionNumber] = useState(1);\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n    let rightPortionPageNumber = portionNumber * portionSize;\n\n\n    return <div className={styles.paginator}>\n        { portionNumber > 1 &&\n        <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\n\n            {pages\n                .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\n                .map((p) => {\n                return <span className={ cn({\n                    [styles.selectedPage]: currentPage === p\n                }, styles.pageNumber) }\n                             key={p}\n                             onClick={(e) => {\n                                 onPageChanged(p);\n                             }}>{p}</span>\n            })}\n        { portionCount > portionNumber &&\n            <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\n\n\n    </div>\n}\n\nexport default Paginator;"]},"metadata":{},"sourceType":"module"}