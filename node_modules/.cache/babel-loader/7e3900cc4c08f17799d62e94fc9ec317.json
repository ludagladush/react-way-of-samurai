{"ast":null,"code":"var _jsxFileName = \"/Users/ludagladushina/react-apps/react-learning-1/src/components/users/users-container.js\";\nimport React from 'react';\nimport * as axios from 'axios';\nimport { connect } from 'react-redux';\nimport Users from './users';\nimport { followAC, unfollowAC, setUsersAC, setCurrentPageAC, setUsersTotalCountAC } from '../../redux/users-reducer';\n\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      this.props.setCurrentPage(pageNumber);\n      axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {\n        this.props.setUsers(response.data.items);\n        console.log(response.data.items);\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {\n      this.props.setUsers(response.data.items);\n      this.props.setTotalUsersCount(response.data.totalCount);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Users, {\n      totalUsersCount: this.props.totalUsersCount,\n      pagesSize: this.props.pageSize,\n      currentPage: this.props.currentPage,\n      onPageChanged: this.props.onPageChanged,\n      users: this.props.users,\n      follow: this.props.follow,\n      unfollow: this.props.unfollow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 16\n      }\n    });\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    follow: userId => {\n      dispatch(followAC(userId));\n    },\n    unfollow: userId => {\n      dispatch(unfollowAC(userId));\n    },\n    setUsers: users => {\n      dispatch(setUsersAC(users));\n    },\n    setCurrentPage: pageNumber => {\n      dispatch(setCurrentPageAC(pageNumber));\n    },\n    setTotalUsersCount: totalCount => {\n      dispatch(setUsersTotalCountAC(totalCount));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContainer);","map":{"version":3,"sources":["/Users/ludagladushina/react-apps/react-learning-1/src/components/users/users-container.js"],"names":["React","axios","connect","Users","followAC","unfollowAC","setUsersAC","setCurrentPageAC","setUsersTotalCountAC","UsersContainer","Component","onPageChanged","pageNumber","props","setCurrentPage","get","currentPage","pageSize","then","response","setUsers","data","items","console","log","componentDidMount","setTotalUsersCount","totalCount","render","totalUsersCount","users","follow","unfollow","mapStateToProps","state","usersPage","isFetching","mapDispatchToProps","dispatch","userId"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,QAAT,EAAmBC,UAAnB,EAA+BC,UAA/B,EAA2CC,gBAA3C,EAA6DC,oBAA7D,QAAyF,2BAAzF;;AAEA,MAAMC,cAAN,SAA6BT,KAAK,CAACU,SAAnC,CAA6C;AAAA;AAAA;;AAAA,SAUzCC,aAVyC,GAUxBC,UAAD,IAAgB;AAC5B,WAAKC,KAAL,CAAWC,cAAX,CAA0BF,UAA1B;AACAX,MAAAA,KAAK,CAACc,GAAN,CAAW,2DAA0D,KAAKF,KAAL,CAAWG,WAAY,UAAS,KAAKH,KAAL,CAAWI,QAAS,EAAzH,EACKC,IADL,CACUC,QAAQ,IAAI;AACd,aAAKN,KAAL,CAAWO,QAAX,CAAoBD,QAAQ,CAACE,IAAT,CAAcC,KAAlC;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACE,IAAT,CAAcC,KAA1B;AACP,OAJD;AAKH,KAjBwC;AAAA;;AAEzCG,EAAAA,iBAAiB,GAAG;AAChBxB,IAAAA,KAAK,CAACc,GAAN,CAAW,2DAA0D,KAAKF,KAAL,CAAWG,WAAY,UAAS,KAAKH,KAAL,CAAWI,QAAS,EAAzH,EACKC,IADL,CACUC,QAAQ,IAAI;AACd,WAAKN,KAAL,CAAWO,QAAX,CAAoBD,QAAQ,CAACE,IAAT,CAAcC,KAAlC;AACA,WAAKT,KAAL,CAAWa,kBAAX,CAA8BP,QAAQ,CAACE,IAAT,CAAcM,UAA5C;AACP,KAJD;AAKH;;AAYDC,EAAAA,MAAM,GAAG;AACL,wBAAO,oBAAC,KAAD;AAAO,MAAA,eAAe,EAAG,KAAKf,KAAL,CAAWgB,eAApC;AACO,MAAA,SAAS,EAAG,KAAKhB,KAAL,CAAWI,QAD9B;AAEO,MAAA,WAAW,EAAG,KAAKJ,KAAL,CAAWG,WAFhC;AAGO,MAAA,aAAa,EAAG,KAAKH,KAAL,CAAWF,aAHlC;AAIO,MAAA,KAAK,EAAG,KAAKE,KAAL,CAAWiB,KAJ1B;AAKO,MAAA,MAAM,EAAG,KAAKjB,KAAL,CAAWkB,MAL3B;AAMO,MAAA,QAAQ,EAAG,KAAKlB,KAAL,CAAWmB,QAN7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAQH;;AA7BwC;;AAiC7C,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHJ,IAAAA,KAAK,EAAEI,KAAK,CAACC,SAAN,CAAgBL,KADpB;AAEHb,IAAAA,QAAQ,EAAEiB,KAAK,CAACC,SAAN,CAAgBlB,QAFvB;AAGHY,IAAAA,eAAe,EAAEK,KAAK,CAACC,SAAN,CAAgBN,eAH9B;AAIHb,IAAAA,WAAW,EAAEkB,KAAK,CAACC,SAAN,CAAgBnB,WAJ1B;AAKHoB,IAAAA,UAAU,EAAEF,KAAK,CAACC;AALf,GAAP;AAOH,CARD;;AAUA,IAAIE,kBAAkB,GAAIC,QAAD,IAAc;AACnC,SAAO;AACHP,IAAAA,MAAM,EAAGQ,MAAD,IAAY;AAChBD,MAAAA,QAAQ,CAAClC,QAAQ,CAACmC,MAAD,CAAT,CAAR;AACH,KAHE;AAIHP,IAAAA,QAAQ,EAAGO,MAAD,IAAY;AAClBD,MAAAA,QAAQ,CAACjC,UAAU,CAACkC,MAAD,CAAX,CAAR;AACH,KANE;AAOHnB,IAAAA,QAAQ,EAAGU,KAAD,IAAW;AACjBQ,MAAAA,QAAQ,CAAChC,UAAU,CAACwB,KAAD,CAAX,CAAR;AACH,KATE;AAUHhB,IAAAA,cAAc,EAAGF,UAAD,IAAgB;AAC5B0B,MAAAA,QAAQ,CAAC/B,gBAAgB,CAACK,UAAD,CAAjB,CAAR;AACH,KAZE;AAaHc,IAAAA,kBAAkB,EAAGC,UAAD,IAAgB;AAChCW,MAAAA,QAAQ,CAAC9B,oBAAoB,CAACmB,UAAD,CAArB,CAAR;AACH;AAfE,GAAP;AAiBH,CAlBD;;AAqBA,eAAezB,OAAO,CAAC+B,eAAD,EAAkBI,kBAAlB,CAAP,CAA6C5B,cAA7C,CAAf","sourcesContent":["import React from 'react';\nimport * as axios from 'axios';\nimport { connect } from 'react-redux';\nimport Users from './users';\nimport { followAC, unfollowAC, setUsersAC, setCurrentPageAC, setUsersTotalCountAC } from '../../redux/users-reducer';\n\nclass UsersContainer extends React.Component {\n\n    componentDidMount() {\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`)\n            .then(response => {\n                this.props.setUsers(response.data.items);\n                this.props.setTotalUsersCount(response.data.totalCount);\n        });\n    }\n\n    onPageChanged = (pageNumber) => {\n        this.props.setCurrentPage(pageNumber); \n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`)\n            .then(response => {\n                this.props.setUsers(response.data.items);\n                console.log(response.data.items)\n        });\n    }\n    \n\n    render() {\n        return <Users totalUsersCount={ this.props.totalUsersCount} \n                      pagesSize={ this.props.pageSize }\n                      currentPage={ this.props.currentPage }\n                      onPageChanged={ this.props.onPageChanged }\n                      users={ this.props.users }\n                      follow={ this.props.follow }\n                      unfollow={ this.props.unfollow }\n        />\n    }\n} \n\n\nlet mapStateToProps = (state) => {\n    return {\n        users: state.usersPage.users,\n        pageSize: state.usersPage.pageSize,\n        totalUsersCount: state.usersPage.totalUsersCount,\n        currentPage: state.usersPage.currentPage,\n        isFetching: state.usersPage\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        follow: (userId) => {\n            dispatch(followAC(userId));\n        },\n        unfollow: (userId) => {\n            dispatch(unfollowAC(userId));\n        },\n        setUsers: (users) => {\n            dispatch(setUsersAC(users));\n        },\n        setCurrentPage: (pageNumber) => {\n            dispatch(setCurrentPageAC(pageNumber))\n        },\n        setTotalUsersCount: (totalCount) => {\n            dispatch(setUsersTotalCountAC(totalCount))\n        }\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContainer);"]},"metadata":{},"sourceType":"module"}