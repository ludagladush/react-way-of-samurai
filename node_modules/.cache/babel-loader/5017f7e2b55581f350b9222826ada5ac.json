{"ast":null,"code":"let store = {\n  _state: {\n    profilePage: {\n      posts: [{\n        id: 1,\n        message: 'Hi, how are you?',\n        likes: 15\n      }, {\n        id: 2,\n        message: 'It\\'s my first post',\n        likes: 20\n      }, {\n        id: 3,\n        message: 'Dada',\n        likes: 21\n      }, {\n        id: 4,\n        message: 'Blabla',\n        likes: 6\n      }],\n      newPostText: ''\n    },\n    messagesPage: {\n      dialogs: [{\n        id: 1,\n        name: 'Luda'\n      }, {\n        id: 2,\n        name: 'Sasha'\n      }, {\n        id: 3,\n        name: 'Vika'\n      }, {\n        id: 4,\n        name: 'Nika'\n      }],\n      messages: [{\n        id: 1,\n        text: 'Hi'\n      }, {\n        id: 2,\n        text: 'How are you?'\n      }, {\n        id: 3,\n        text: 'What is your name?'\n      }, {\n        id: 4,\n        text: 'What is your favorite color? '\n      }],\n      newMessageText: 'hello'\n    }\n  },\n\n  getState() {\n    return this._state;\n  },\n\n  renderEntireTree() {\n    console.log('state changed');\n  },\n\n  addPost() {\n    let newPost = {\n      id: 5,\n      message: this._state.profilePage.newPostText,\n      likes: 0\n    };\n\n    this._state.profilePage.posts.push(newPost);\n\n    this._state.profilePage.newPostText = '';\n    this.renderEntireTree();\n  },\n\n  updateNewPostText(newText) {\n    state.profilePage.newPostText = newText;\n    renderEntireTree();\n  },\n\n  addMessage(message) {\n    let newMessage = {\n      id: 5,\n      text: state.messagesPage.newMessageText\n    };\n    state.messagesPage.messages.push(newMessage);\n    renderEntireTree();\n  },\n\n  updateNewMessageText(newText) {\n    state.messagesPage.newMessageText = newText;\n    renderEntireTree();\n  },\n\n  subscribe(observer) {\n    renderEntireTree = observer;\n  }\n\n};\nwindow.store = store;\nexport default store;","map":{"version":3,"sources":["/Users/ludagladushina/react-apps/react-learning-1/src/redux/state.js"],"names":["store","_state","profilePage","posts","id","message","likes","newPostText","messagesPage","dialogs","name","messages","text","newMessageText","getState","renderEntireTree","console","log","addPost","newPost","push","updateNewPostText","newText","state","addMessage","newMessage","updateNewMessageText","subscribe","observer","window"],"mappings":"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","sourcesContent":["let store = {\n  _state: {\n\n    profilePage: {\n        posts: [\n            { id: 1, message: 'Hi, how are you?', likes: 15 },\n            { id: 2, message: 'It\\'s my first post', likes: 20 },\n            { id: 3, message: 'Dada', likes: 21 },\n            { id: 4, message: 'Blabla', likes: 6 }\n          ],\n        newPostText: ''\n    },\n\n    messagesPage: {\n        dialogs: [\n            { id: 1, name: 'Luda' },\n            { id: 2, name: 'Sasha' },\n            { id: 3, name: 'Vika' },\n            { id: 4, name: 'Nika' }\n          ],\n    \n          messages: [\n            { id: 1, text: 'Hi' },\n            { id: 2, text: 'How are you?' },\n            { id: 3, text: 'What is your name?' },\n            { id: 4, text: 'What is your favorite color? ' }\n          ],\n          newMessageText: 'hello'\n    }\n  },\n  getState() {\n    return this._state;\n  },\n  renderEntireTree() {\n    console.log('state changed');\n  },\n  addPost() {\n    let newPost = {\n      id: 5,\n      message: this._state.profilePage.newPostText,\n      likes: 0\n    }\n    this._state.profilePage.posts.push(newPost);\n    this._state.profilePage.newPostText = '';\n      this.renderEntireTree();\n  },\n  updateNewPostText(newText) {\n    state.profilePage.newPostText = newText;\n    renderEntireTree();\n  },\n  addMessage(message) {\n    let newMessage = {\n      id: 5,\n      text: state.messagesPage.newMessageText\n    }\n    state.messagesPage.messages.push(newMessage);\n    renderEntireTree();\n  },\n  updateNewMessageText(newText) {\n    state.messagesPage.newMessageText = newText;\n    renderEntireTree();\n  },\n  subscribe (observer) {\n    renderEntireTree = observer;\n  }\n};\n\n  window.store = store;\n\n  export default store;"]},"metadata":{},"sourceType":"module"}