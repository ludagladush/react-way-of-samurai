{"ast":null,"code":"import { createSelector } from 'reselect';\nexport const getUsers = state => {\n  return state.usersPage.users.filter(u => true);\n};\nexport const getUsersSuper = createSelector(() => {\n  state.usersPage.users.filter(u => true);\n});\nexport const getPageSize = state => {\n  return state.usersPage.pageSize;\n};\nexport const getTotalUsersCount = state => {\n  return state.usersPage.totalUsersCount;\n};\nexport const getCurrentPage = state => {\n  return state.usersPage.currentPage;\n};\nexport const getIsFetching = state => {\n  return state.usersPage.isFetching;\n};\nexport const getFollowingInProgress = state => {\n  return state.usersPage.followingInProgress;\n};","map":{"version":3,"sources":["/Users/ludagladushina/react-apps/react-learning-1/src/redux/users-selectors.js"],"names":["createSelector","getUsers","state","usersPage","users","filter","u","getUsersSuper","getPageSize","pageSize","getTotalUsersCount","totalUsersCount","getCurrentPage","currentPage","getIsFetching","isFetching","getFollowingInProgress","followingInProgress"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;AAEA,OAAO,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC/B,SAAOA,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,MAAtB,CAA6BC,CAAC,IAAI,IAAlC,CAAP;AACH,CAFM;AAIP,OAAO,MAAMC,aAAa,GAAGP,cAAc,CAAE,MAAM;AAC/CE,EAAAA,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,MAAtB,CAA6BC,CAAC,IAAI,IAAlC;AACH,CAF0C,CAApC;AAIP,OAAO,MAAME,WAAW,GAAIN,KAAD,IAAW;AAClC,SAAOA,KAAK,CAACC,SAAN,CAAgBM,QAAvB;AACH,CAFM;AAIP,OAAO,MAAMC,kBAAkB,GAAIR,KAAD,IAAW;AACzC,SAAOA,KAAK,CAACC,SAAN,CAAgBQ,eAAvB;AACH,CAFM;AAIP,OAAO,MAAMC,cAAc,GAAIV,KAAD,IAAW;AACrC,SAAOA,KAAK,CAACC,SAAN,CAAgBU,WAAvB;AACH,CAFM;AAIP,OAAO,MAAMC,aAAa,GAAIZ,KAAD,IAAW;AACpC,SAAOA,KAAK,CAACC,SAAN,CAAgBY,UAAvB;AACH,CAFM;AAIP,OAAO,MAAMC,sBAAsB,GAAId,KAAD,IAAW;AAC7C,SAAOA,KAAK,CAACC,SAAN,CAAgBc,mBAAvB;AACH,CAFM","sourcesContent":["import { createSelector } from 'reselect';\n\nexport const getUsers = (state) => {\n    return state.usersPage.users.filter(u => true);\n}\n\nexport const getUsersSuper = createSelector( () => {\n    state.usersPage.users.filter(u => true);\n})\n\nexport const getPageSize = (state) => {\n    return state.usersPage.pageSize;\n}\n\nexport const getTotalUsersCount = (state) => {\n    return state.usersPage.totalUsersCount;\n}\n\nexport const getCurrentPage = (state) => {\n    return state.usersPage.currentPage;\n}\n\nexport const getIsFetching = (state) => {\n    return state.usersPage.isFetching;\n}\n\nexport const getFollowingInProgress = (state) => {\n    return state.usersPage.followingInProgress;\n}\n\n"]},"metadata":{},"sourceType":"module"}