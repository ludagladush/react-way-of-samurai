{"ast":null,"code":"const SEND_MESSAGE = 'SEND_MESSAGE';\nconst UPDATE_NEW_MESSAGE_BODY = 'UPDATE_NEW_MESSAGE_BODY';\nlet initialState = {\n  dialogs: [{\n    id: 1,\n    name: 'Luda'\n  }, {\n    id: 2,\n    name: 'Sasha'\n  }, {\n    id: 3,\n    name: 'Vika'\n  }, {\n    id: 4,\n    name: 'Nika'\n  }],\n  messages: [{\n    id: 1,\n    text: 'Hi'\n  }, {\n    id: 2,\n    text: 'How are you?'\n  }, {\n    id: 3,\n    text: 'What is your name?'\n  }, {\n    id: 4,\n    text: 'What is your favorite color? '\n  }],\n  newMessageBody: ''\n};\n\nconst dialogsReducer = (state = initialState, action) => {\n  let st;\n\n  switch (action.type) {\n    case SEND_MESSAGE:\n      stateCopy = { ...state,\n        messages: [...state.messages]\n      };\n      let body = state.newMessageBody;\n      stateCopy.newMessageBody = '';\n      stateCopy.messages.push({\n        id: 6,\n        message: body\n      });\n      return stateCopy;\n\n    case UPDATE_NEW_MESSAGE_BODY:\n      stateCopy = { ...state,\n        messages: [...state.messages]\n      };\n      stateCopy.newMessageBody = action.body;\n      return stateCopy;\n\n    default:\n      return state;\n  }\n};\n\nexport let sendMessageCreator = () => ({\n  type: SEND_MESSAGE\n});\nexport let updateNewMessageBodyCreator = body => ({\n  type: UPDATE_NEW_MESSAGE_BODY,\n  body: body\n});\nexport default dialogsReducer;","map":{"version":3,"sources":["/Users/ludagladushina/react-apps/react-learning-1/src/redux/dialogs-reducer.js"],"names":["SEND_MESSAGE","UPDATE_NEW_MESSAGE_BODY","initialState","dialogs","id","name","messages","text","newMessageBody","dialogsReducer","state","action","st","type","stateCopy","body","push","message","sendMessageCreator","updateNewMessageBodyCreator"],"mappings":"AAAA,MAAMA,YAAY,GAAG,cAArB;AACA,MAAMC,uBAAuB,GAAG,yBAAhC;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,OAAO,EAAE,CACL;AAAEC,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE;AAAf,GADK,EAEL;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE;AAAf,GAFK,EAGL;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE;AAAf,GAHK,EAIL;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE;AAAf,GAJK,CADM;AAQbC,EAAAA,QAAQ,EAAE,CACR;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASG,IAAAA,IAAI,EAAE;AAAf,GADQ,EAER;AAAEH,IAAAA,EAAE,EAAE,CAAN;AAASG,IAAAA,IAAI,EAAE;AAAf,GAFQ,EAGR;AAAEH,IAAAA,EAAE,EAAE,CAAN;AAASG,IAAAA,IAAI,EAAE;AAAf,GAHQ,EAIR;AAAEH,IAAAA,EAAE,EAAE,CAAN;AAASG,IAAAA,IAAI,EAAE;AAAf,GAJQ,CARG;AAcbC,EAAAA,cAAc,EAAE;AAdH,CAAnB;;AAiBA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AAErD,MAAIC,EAAJ;;AAEA,UAAOD,MAAM,CAACE,IAAd;AACI,SAAKb,YAAL;AACIc,MAAAA,SAAS,GAAG,EAAE,GAAGJ,KAAL;AAAYJ,QAAAA,QAAQ,EAAE,CAAC,GAAGI,KAAK,CAACJ,QAAV;AAAtB,OAAZ;AACA,UAAIS,IAAI,GAAGL,KAAK,CAACF,cAAjB;AACAM,MAAAA,SAAS,CAACN,cAAV,GAA2B,EAA3B;AACAM,MAAAA,SAAS,CAACR,QAAV,CAAmBU,IAAnB,CAAwB;AAAEZ,QAAAA,EAAE,EAAE,CAAN;AAASa,QAAAA,OAAO,EAAEF;AAAlB,OAAxB;AACA,aAAOD,SAAP;;AACJ,SAAKb,uBAAL;AACIa,MAAAA,SAAS,GAAG,EAAE,GAAGJ,KAAL;AAAYJ,QAAAA,QAAQ,EAAE,CAAC,GAAGI,KAAK,CAACJ,QAAV;AAAtB,OAAZ;AACAQ,MAAAA,SAAS,CAACN,cAAV,GAA2BG,MAAM,CAACI,IAAlC;AACA,aAAOD,SAAP;;AACJ;AACI,aAAOJ,KAAP;AAZR;AAcH,CAlBD;;AAoBA,OAAO,IAAIQ,kBAAkB,GAAG,OAAO;AAAEL,EAAAA,IAAI,EAAEb;AAAR,CAAP,CAAzB;AACP,OAAO,IAAImB,2BAA2B,GAAIJ,IAAD,KACpC;AAAEF,EAAAA,IAAI,EAAEZ,uBAAR;AAAiCc,EAAAA,IAAI,EAAEA;AAAvC,CADoC,CAAlC;AAIP,eAAeN,cAAf","sourcesContent":["const SEND_MESSAGE = 'SEND_MESSAGE';\nconst UPDATE_NEW_MESSAGE_BODY = 'UPDATE_NEW_MESSAGE_BODY';\n\nlet initialState = {\n    dialogs: [\n        { id: 1, name: 'Luda' },\n        { id: 2, name: 'Sasha' },\n        { id: 3, name: 'Vika' },\n        { id: 4, name: 'Nika' }\n      ],\n\n      messages: [\n        { id: 1, text: 'Hi' },\n        { id: 2, text: 'How are you?' },\n        { id: 3, text: 'What is your name?' },\n        { id: 4, text: 'What is your favorite color? ' }\n      ],\n      newMessageBody: ''\n};\n\nconst dialogsReducer = (state = initialState, action) => {\n\n    let st\n\n    switch(action.type) {\n        case SEND_MESSAGE:\n            stateCopy = { ...state, messages: [...state.messages] }; \n            let body = state.newMessageBody;\n            stateCopy.newMessageBody = '';\n            stateCopy.messages.push({ id: 6, message: body });\n            return stateCopy;\n        case UPDATE_NEW_MESSAGE_BODY:\n            stateCopy = { ...state, messages: [...state.messages] }; \n            stateCopy.newMessageBody = action.body;\n            return stateCopy;\n        default:\n            return state;\n    }\n}\n\nexport let sendMessageCreator = () => ({ type: SEND_MESSAGE });\nexport let updateNewMessageBodyCreator = (body) => \n    ({ type: UPDATE_NEW_MESSAGE_BODY, body: body });\n    \n\nexport default dialogsReducer;"]},"metadata":{},"sourceType":"module"}