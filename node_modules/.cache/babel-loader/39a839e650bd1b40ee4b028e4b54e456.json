{"ast":null,"code":"var _jsxFileName = \"/Users/ludagladushina/react-apps/react-learning-1/src/components/common/paginator/paginator.js\",\n    _s = $RefreshSig$();\n\n// import React from 'react';\n// import styles from \"./paginator.module.css\";\n// let Paginator = ({totalUsersCount, pageSize, currentPage, onPageChanged}) => {\n//     let pagesCount = Math.ceil(totalUsersCount / pageSize);\n//     let pages = [];\n//     for (let i = 1; i <= pagesCount; i++) {\n//         pages.push(i);\n//     }\n//     return <div>\n//             {pages.map(p => {\n//                 return <span className={currentPage === p && styles.selectedPage}\n//                              onClick={(e) => {\n//                                  onPageChanged(p);\n//                              }}>{p}</span>\n//             })}\n//         </div>\n// }\n// export default Paginator;\nimport React, { useState } from 'react';\nimport styles from \"./paginator.module.css\";\nimport cn from \"classnames\";\n\nlet Paginator = ({\n  totalItemsCount,\n  pageSize,\n  currentPage,\n  onPageChanged,\n  portionSize = 10\n}) => {\n  _s();\n\n  let pagesCount = Math.ceil(totalItemsCount / pageSize);\n  let pages = [];\n\n  for (let i = 1; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n\n  let portionCount = Math.ceil(pagesCount / portionSize);\n  let [portionNumber, setPortionNumber] = useState(1);\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n  let rightPortionPageNumber = portionNumber * portionSize;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.paginator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }\n  }, portionNumber > 1 && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      setPortionNumber(portionNumber - 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"PREV\"), pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber).map(p => {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: cn({\n        [styles.selectedPage]: currentPage === p\n      }, styles.pageNumber),\n      key: p,\n      onClick: e => {\n        onPageChanged(p);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 24\n      }\n    }, p);\n  }), portionCount > portionNumber && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      setPortionNumber(portionNumber + 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"NEXT\"));\n};\n\n_s(Paginator, \"8p8zb1vvZvsuWyQQS16DuuzsJLU=\");\n\n_c = Paginator;\nexport default Paginator;\n\nvar _c;\n\n$RefreshReg$(_c, \"Paginator\");","map":{"version":3,"sources":["/Users/ludagladushina/react-apps/react-learning-1/src/components/common/paginator/paginator.js"],"names":["React","useState","styles","cn","Paginator","totalItemsCount","pageSize","currentPage","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","filter","p","map","selectedPage","pageNumber","e"],"mappings":";;;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,EAAP,MAAe,YAAf;;AAEA,IAAIC,SAAS,GAAG,CAAC;AAACC,EAAAA,eAAD;AAAkBC,EAAAA,QAAlB;AAA4BC,EAAAA,WAA5B;AAAyCC,EAAAA,aAAzC;AAAwDC,EAAAA,WAAW,GAAG;AAAtE,CAAD,KAA+E;AAAA;;AAE3F,MAAIC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUP,eAAe,GAAGC,QAA5B,CAAjB;AAEA,MAAIO,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIJ,UAArB,EAAiCI,CAAC,EAAlC,EAAsC;AAClCD,IAAAA,KAAK,CAACE,IAAN,CAAWD,CAAX;AACH;;AAED,MAAIE,YAAY,GAAGL,IAAI,CAACC,IAAL,CAAUF,UAAU,GAAGD,WAAvB,CAAnB;AACA,MAAI,CAACQ,aAAD,EAAgBC,gBAAhB,IAAoCjB,QAAQ,CAAC,CAAD,CAAhD;AACA,MAAIkB,qBAAqB,GAAG,CAACF,aAAa,GAAG,CAAjB,IAAsBR,WAAtB,GAAoC,CAAhE;AACA,MAAIW,sBAAsB,GAAGH,aAAa,GAAGR,WAA7C;AAGA,sBAAO;AAAK,IAAA,SAAS,EAAEP,MAAM,CAACmB,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACDJ,aAAa,GAAG,CAAhB,iBACF;AAAQ,IAAA,OAAO,EAAE,MAAM;AAAEC,MAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AAAqC,KAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFG,EAIEJ,KAAK,CACDS,MADJ,CACWC,CAAC,IAAIA,CAAC,IAAIJ,qBAAL,IAA8BI,CAAC,IAAEH,sBADjD,EAEII,GAFJ,CAESD,CAAD,IAAO;AACZ,wBAAO;AAAM,MAAA,SAAS,EAAGpB,EAAE,CAAC;AACxB,SAACD,MAAM,CAACuB,YAAR,GAAuBlB,WAAW,KAAKgB;AADf,OAAD,EAExBrB,MAAM,CAACwB,UAFiB,CAApB;AAGM,MAAA,GAAG,EAAEH,CAHX;AAIM,MAAA,OAAO,EAAGI,CAAD,IAAO;AACZnB,QAAAA,aAAa,CAACe,CAAD,CAAb;AACH,OANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMUA,CANV,CAAP;AAOH,GAVA,CAJF,EAeDP,YAAY,GAAGC,aAAf,iBACE;AAAQ,IAAA,OAAO,EAAE,MAAM;AAAEC,MAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AAAqC,KAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBD,CAAP;AAoBH,CAnCD;;GAAIb,S;;KAAAA,S;AAqCJ,eAAeA,SAAf","sourcesContent":["// import React from 'react';\n// import styles from \"./paginator.module.css\";\n\n// let Paginator = ({totalUsersCount, pageSize, currentPage, onPageChanged}) => {\n//     let pagesCount = Math.ceil(totalUsersCount / pageSize);\n\n//     let pages = [];\n//     for (let i = 1; i <= pagesCount; i++) {\n//         pages.push(i);\n//     }\n\n//     return <div>\n//             {pages.map(p => {\n//                 return <span className={currentPage === p && styles.selectedPage}\n//                              onClick={(e) => {\n//                                  onPageChanged(p);\n//                              }}>{p}</span>\n//             })}\n//         </div>\n// }\n\n// export default Paginator;\n\nimport React, {useState} from 'react';\nimport styles from \"./paginator.module.css\";\nimport cn from \"classnames\";\n\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\n\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\n\n    let pages = [];\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i);\n    }\n\n    let portionCount = Math.ceil(pagesCount / portionSize);\n    let [portionNumber, setPortionNumber] = useState(1);\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n    let rightPortionPageNumber = portionNumber * portionSize;\n\n\n    return <div className={styles.paginator}>\n        { portionNumber > 1 &&\n        <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\n\n            {pages\n                .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\n                .map((p) => {\n                return <span className={ cn({\n                    [styles.selectedPage]: currentPage === p\n                }, styles.pageNumber) }\n                             key={p}\n                             onClick={(e) => {\n                                 onPageChanged(p);\n                             }}>{p}</span>\n            })}\n        { portionCount > portionNumber &&\n            <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\n\n\n    </div>\n}\n\nexport default Paginator;"]},"metadata":{},"sourceType":"module"}