{"ast":null,"code":"var _jsxFileName = \"/Users/ludagladushina/react-apps/react-learning-1/src/components/common/FormsControls/forms-controls.js\";\nimport React from 'react';\nimport styles from './form-controls.module.css';\n\nconst FormControl = ({\n  input,\n  meta,\n  ...props\n}) => {\n  const hasError = meta.touched && meta.error;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: hasError ? styles.error : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }\n  }, props.child), hasError && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 27\n    }\n  }, meta.error));\n};\n\n_c = FormControl;\nexport const Textarea = ({\n  input,\n  meta,\n  ...props\n}) => {\n  return /*#__PURE__*/React.createElement(FormControl, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", Object.assign({}, input, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 38\n    }\n  })));\n};\n_c2 = Textarea;\nexport const Input = ({\n  input,\n  meta,\n  ...props\n}) => {\n  return /*#__PURE__*/React.createElement(FormControl, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, input, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 38\n    }\n  })));\n};\n_c3 = Input;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"FormControl\");\n$RefreshReg$(_c2, \"Textarea\");\n$RefreshReg$(_c3, \"Input\");","map":{"version":3,"sources":["/Users/ludagladushina/react-apps/react-learning-1/src/components/common/FormsControls/forms-controls.js"],"names":["React","styles","FormControl","input","meta","props","hasError","touched","error","child","Textarea","Input"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,IAAT;AAAe,KAAGC;AAAlB,CAAD,KAA+B;AAC/C,QAAMC,QAAQ,GAAGF,IAAI,CAACG,OAAL,IAAgBH,IAAI,CAACI,KAAtC;AACA,sBACI;AAAK,IAAA,SAAS,EAAGF,QAAQ,GAAGL,MAAM,CAACO,KAAV,GAAkB,EAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOH,KAAK,CAACI,KAAb,CADJ,EAEMH,QAAQ,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQF,IAAI,CAACI,KAAb,CAFlB,CADJ;AAMH,CARD;;KAAMN,W;AAUN,OAAO,MAAMQ,QAAQ,GAAG,CAAC;AAAEP,EAAAA,KAAF;AAASC,EAAAA,IAAT;AAAe,KAAGC;AAAlB,CAAD,KAA+B;AACnD,sBAAO,oBAAC,WAAD,oBAAkBA,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA0B,kDAAeF,KAAf,EAA4BE,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA1B,CAAP;AACH,CAFM;MAAMK,Q;AAIb,OAAO,MAAMC,KAAK,GAAG,CAAC;AAAER,EAAAA,KAAF;AAASC,EAAAA,IAAT;AAAe,KAAGC;AAAlB,CAAD,KAA+B;AAChD,sBAAO,oBAAC,WAAD,oBAAkBA,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA0B,+CAAWF,KAAX,EAAwBE,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA1B,CAAP;AAEH,CAHM;MAAMM,K","sourcesContent":["import React from 'react';\nimport styles from './form-controls.module.css';\n\nconst FormControl = ({ input, meta, ...props }) => {\n    const hasError = meta.touched && meta.error;\n    return (\n        <div className={ hasError ? styles.error : '' }>\n            <div>{ props.child }</div>\n            { hasError && <span>{ meta.error }</span> }\n        </div>\n    )\n}\n\nexport const Textarea = ({ input, meta, ...props }) => {\n    return <FormControl { ...props }><textarea { ...input } { ...props }/></FormControl>\n}\n\nexport const Input = ({ input, meta, ...props }) => {\n    return <FormControl { ...props }><input{ ...input } { ...props }/></FormControl>\n   \n}"]},"metadata":{},"sourceType":"module"}