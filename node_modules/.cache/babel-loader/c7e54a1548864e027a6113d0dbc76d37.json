{"ast":null,"code":"var _jsxFileName = \"/Users/ludagladushina/react-apps/react-learning-1/src/components/users/users-container.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Users from './users';\nimport { follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers } from '../../redux/users-reducer';\nimport Preloader from '../preloader/preloader';\nimport { compose } from 'redux';\nimport { getPageSize, getTotalUsersCount } from '../../redux/users-selectors';\n\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      this.props.getUsers(pageNumber, this.props.pageSize);\n    };\n  }\n\n  componentDidMount() {\n    this.props.getUsers(this.props.currentPage, this.props.pageSize);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.props.isFetching ? /*#__PURE__*/React.createElement(Preloader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 39\n      }\n    }) : null, /*#__PURE__*/React.createElement(Users, {\n      totalUsersCount: this.props.totalUsersCount,\n      pageSize: this.props.pageSize,\n      currentPage: this.props.currentPage,\n      onPageChanged: this.onPageChanged,\n      users: this.props.users,\n      follow: this.props.follow,\n      unfollow: this.props.unfollow,\n      followingInProgress: this.props.followingInProgress,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: getUsers(),\n    pageSize: getPageSize(),\n    totalUsersCount: getTotalUsersCount(),\n    currentPage: get,\n    isFetching: state.usersPage.isFetching,\n    followingInProgress: state.usersPage.followingInProgress\n  };\n};\n\nexport default compose(connect(mapStateToProps, {\n  follow,\n  unfollow,\n  setCurrentPage,\n  toggleFollowingProgress,\n  getUsers\n}))(UsersContainer);","map":{"version":3,"sources":["/Users/ludagladushina/react-apps/react-learning-1/src/components/users/users-container.js"],"names":["React","connect","Users","follow","unfollow","setCurrentPage","toggleFollowingProgress","getUsers","Preloader","compose","getPageSize","getTotalUsersCount","UsersContainer","Component","onPageChanged","pageNumber","props","pageSize","componentDidMount","currentPage","render","isFetching","totalUsersCount","users","followingInProgress","mapStateToProps","state","get","usersPage"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,cAA3B,EAA2CC,uBAA3C,EAAoEC,QAApE,QAAoF,2BAApF;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,WAAT,EAAsBC,kBAAtB,QAAgD,6BAAhD;;AAEA,MAAMC,cAAN,SAA6BZ,KAAK,CAACa,SAAnC,CAA6C;AAAA;AAAA;;AAAA,SAMzCC,aANyC,GAMxBC,UAAD,IAAgB;AAC5B,WAAKC,KAAL,CAAWT,QAAX,CAAoBQ,UAApB,EAAgC,KAAKC,KAAL,CAAWC,QAA3C;AACH,KARwC;AAAA;;AAEzCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKF,KAAL,CAAWT,QAAX,CAAoB,KAAKS,KAAL,CAAWG,WAA/B,EAA4C,KAAKH,KAAL,CAAWC,QAAvD;AACH;;AAODG,EAAAA,MAAM,GAAG;AAEL,wBAAO,0CACD,KAAKJ,KAAL,CAAWK,UAAX,gBAAwB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAxB,GAAwC,IADvC,eAEH,oBAAC,KAAD;AAAO,MAAA,eAAe,EAAG,KAAKL,KAAL,CAAWM,eAApC;AACQ,MAAA,QAAQ,EAAG,KAAKN,KAAL,CAAWC,QAD9B;AAEQ,MAAA,WAAW,EAAG,KAAKD,KAAL,CAAWG,WAFjC;AAGQ,MAAA,aAAa,EAAG,KAAKL,aAH7B;AAIQ,MAAA,KAAK,EAAG,KAAKE,KAAL,CAAWO,KAJ3B;AAKQ,MAAA,MAAM,EAAG,KAAKP,KAAL,CAAWb,MAL5B;AAMQ,MAAA,QAAQ,EAAG,KAAKa,KAAL,CAAWZ,QAN9B;AAOQ,MAAA,mBAAmB,EAAG,KAAKY,KAAL,CAAWQ,mBAPzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFG,CAAP;AAYH;;AAzBwC;;AA6B7C,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHH,IAAAA,KAAK,EAAEhB,QAAQ,EADZ;AAEHU,IAAAA,QAAQ,EAAEP,WAAW,EAFlB;AAGHY,IAAAA,eAAe,EAAEX,kBAAkB,EAHhC;AAIHQ,IAAAA,WAAW,EAAEQ,GAJV;AAKHN,IAAAA,UAAU,EAAEK,KAAK,CAACE,SAAN,CAAgBP,UALzB;AAMHG,IAAAA,mBAAmB,EAAEE,KAAK,CAACE,SAAN,CAAgBJ;AANlC,GAAP;AAQH,CATD;;AAWA,eAAef,OAAO,CAClBR,OAAO,CAACwB,eAAD,EAAkB;AACrBtB,EAAAA,MADqB;AAErBC,EAAAA,QAFqB;AAGrBC,EAAAA,cAHqB;AAIrBC,EAAAA,uBAJqB;AAKrBC,EAAAA;AALqB,CAAlB,CADW,CAAP,CAQbK,cARa,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport Users from './users';\nimport { follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers } from '../../redux/users-reducer';\nimport Preloader from '../preloader/preloader';\nimport { compose } from 'redux';\nimport { getPageSize, getTotalUsersCount } from '../../redux/users-selectors';\n\nclass UsersContainer extends React.Component {\n\n    componentDidMount() {\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);   \n    }\n\n    onPageChanged = (pageNumber) => {\n        this.props.getUsers(pageNumber, this.props.pageSize);    \n    }\n    \n\n    render() {\n\n        return <>\n            { this.props.isFetching ? <Preloader /> : null }\n            <Users totalUsersCount={ this.props.totalUsersCount} \n                    pageSize={ this.props.pageSize }\n                    currentPage={ this.props.currentPage }\n                    onPageChanged={ this.onPageChanged }\n                    users={ this.props.users }\n                    follow={ this.props.follow }\n                    unfollow={ this.props.unfollow }\n                    followingInProgress={ this.props.followingInProgress }\n            />\n        </>\n    }\n} \n\n\nlet mapStateToProps = (state) => {\n    return {\n        users: getUsers(),\n        pageSize: getPageSize(),\n        totalUsersCount: getTotalUsersCount(),\n        currentPage: get,\n        isFetching: state.usersPage.isFetching,\n        followingInProgress: state.usersPage.followingInProgress\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, {\n        follow,\n        unfollow,\n        setCurrentPage,\n        toggleFollowingProgress,\n        getUsers\n    })\n)(UsersContainer);"]},"metadata":{},"sourceType":"module"}