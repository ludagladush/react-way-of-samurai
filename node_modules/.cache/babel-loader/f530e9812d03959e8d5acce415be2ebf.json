{"ast":null,"code":"var _jsxFileName = \"/Users/ludagladushina/react-apps/react-learning-1/src/components/profile/profile-container.js\";\nimport React from 'react';\nimport Profile from './profile';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { getUserProfile, getStatus, updateStatus } from '../../redux/profile-reducer';\nimport { compose } from 'redux';\n\nclass ProfileContainer extends React.Component {\n  componentDidMount() {\n    let userId = this.props.match.params.userId;\n\n    if (!userId) {\n      userId = this.props.authorisedUserId;\n    }\n\n    this.props.getUserProfile(userId);\n    this.props.getStatus(userId);\n  }\n\n  render() {\n    // if (!this.props.isAuth) return <Redirect to={'/login'} />;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Profile, Object.assign({}, this.props, {\n      profile: this.props.profile,\n      status: this.props.status,\n      updateStatus: this.props.updateStatus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    })));\n  }\n\n}\n\n;\n\nlet mapStateToProps = state => ({\n  profile: state.profilePage.profile,\n  status: state.profilePage.status,\n  authorisedUserId: state.auth.userId,\n  isAuth: state.auth.isAuth\n});\n\nexport default compose(connect(mapStateToProps, {\n  getUserProfile,\n  getStatus,\n  updateStatus\n}), withRouter)(ProfileContainer);","map":{"version":3,"sources":["/Users/ludagladushina/react-apps/react-learning-1/src/components/profile/profile-container.js"],"names":["React","Profile","connect","withRouter","getUserProfile","getStatus","updateStatus","compose","ProfileContainer","Component","componentDidMount","userId","props","match","params","authorisedUserId","render","profile","status","mapStateToProps","state","profilePage","auth","isAuth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,cAAT,EAAyBC,SAAzB,EAAoCC,YAApC,QAAwD,6BAAxD;AACA,SAASC,OAAT,QAAwB,OAAxB;;AAIA,MAAMC,gBAAN,SAA+BR,KAAK,CAACS,SAArC,CAA+C;AAE3CC,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAArC;;AACA,QAAI,CAACA,MAAL,EAAa;AACTA,MAAAA,MAAM,GAAG,KAAKC,KAAL,CAAWG,gBAApB;AACH;;AACD,SAAKH,KAAL,CAAWR,cAAX,CAA0BO,MAA1B;AACA,SAAKC,KAAL,CAAWP,SAAX,CAAqBM,MAArB;AACH;;AAEDK,EAAAA,MAAM,GAAI;AACN;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,OAAD,oBAAc,KAAKJ,KAAnB;AAA2B,MAAA,OAAO,EAAG,KAAKA,KAAL,CAAWK,OAAhD;AAA0D,MAAA,MAAM,EAAG,KAAKL,KAAL,CAAWM,MAA9E;AAAuF,MAAA,YAAY,EAAG,KAAKN,KAAL,CAAWN,YAAjH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ,CADJ;AAMH;;AAnB0C;;AAoB9C;;AAED,IAAIa,eAAe,GAAIC,KAAD,KAAY;AAC9BH,EAAAA,OAAO,EAAEG,KAAK,CAACC,WAAN,CAAkBJ,OADG;AAE9BC,EAAAA,MAAM,EAAEE,KAAK,CAACC,WAAN,CAAkBH,MAFI;AAG9BH,EAAAA,gBAAgB,EAAEK,KAAK,CAACE,IAAN,CAAWX,MAHC;AAI9BY,EAAAA,MAAM,EAAEH,KAAK,CAACE,IAAN,CAAWC;AAJW,CAAZ,CAAtB;;AAQA,eAAehB,OAAO,CAClBL,OAAO,CAACiB,eAAD,EAAkB;AAAEf,EAAAA,cAAF;AAAkBC,EAAAA,SAAlB;AAA6BC,EAAAA;AAA7B,CAAlB,CADW,EAElBH,UAFkB,CAAP,CAGbK,gBAHa,CAAf","sourcesContent":["import React from 'react';\nimport Profile from './profile';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { getUserProfile, getStatus, updateStatus } from '../../redux/profile-reducer';\nimport { compose } from 'redux';\n\n\n\nclass ProfileContainer extends React.Component {\n\n    componentDidMount() {\n        let userId = this.props.match.params.userId;\n        if (!userId) {\n            userId = this.props.authorisedUserId;\n        }\n        this.props.getUserProfile(userId);\n        this.props.getStatus(userId);\n    }\n\n    render () {\n        // if (!this.props.isAuth) return <Redirect to={'/login'} />;\n        return (\n            <div>\n                <Profile { ...this.props } profile={ this.props.profile } status={ this.props.status } updateStatus={ this.props.updateStatus }/>\n                \n          </div>\n        )\n    }\n};\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorisedUserId: state.auth.userId, \n    isAuth: state.auth.isAuth\n});\n\n\nexport default compose(\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\n    withRouter\n)(ProfileContainer);"]},"metadata":{},"sourceType":"module"}