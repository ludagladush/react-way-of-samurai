{"ast":null,"code":"var _jsxFileName = \"/Users/ludagladushina/react-apps/react-learning-1/src/components/users/users-container.js\";\nimport React from 'react';\nimport * as axios from 'axios';\nimport { connect } from 'react-redux';\nimport Users from './users';\nimport { followAC, unfollowAC, setUsersAC, setCurrentPageAC, setUsersTotalCountAC, toggleIsFetchingAC } from '../../redux/users-reducer';\nimport spinner from \"../images/Spinner-1s-200px.svg\";\n\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      this.props.setCurrentPage(pageNumber);\n      this.props.toggleIsFetching(true);\n      axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {\n        this.props.toggleIsFetching(false);\n        this.props.setUsers(response.data.items);\n        console.log(response.data.items);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.toggleIsFetching(true);\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {\n      this.props.toggleIsFetching(false);\n      this.props.setUsers(response.data.items);\n      this.props.setTotalUsersCount(response.data.totalCount);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.props.isFetching ? /*#__PURE__*/React.createElement(\"img\", {\n      src: spinner,\n      alt: \"spinner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 39\n      }\n    }) : null, /*#__PURE__*/React.createElement(Users, {\n      totalUsersCount: this.props.totalUsersCount,\n      pagesSize: this.props.pageSize,\n      currentPage: this.props.currentPage,\n      onPageChanged: this.props.onPageChanged,\n      users: this.props.users,\n      follow: this.props.follow,\n      unfollow: this.props.unfollow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    follow: userId => {\n      dispatch(followAC(userId));\n    },\n    unfollow: userId => {\n      dispatch(unfollowAC(userId));\n    },\n    setUsers: users => {\n      dispatch(setUsersAC(users));\n    },\n    setCurrentPage: pageNumber => {\n      dispatch(setCurrentPageAC(pageNumber));\n    },\n    setTotalUsersCount: totalCount => {\n      dispatch(setUsersTotalCountAC(totalCount));\n    },\n    toggleIsFetching: isFetching => {\n      dispatch(toggleIsFetchingAC(isFetching));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContainer);","map":{"version":3,"sources":["/Users/ludagladushina/react-apps/react-learning-1/src/components/users/users-container.js"],"names":["React","axios","connect","Users","followAC","unfollowAC","setUsersAC","setCurrentPageAC","setUsersTotalCountAC","toggleIsFetchingAC","UsersContainer","Component","onPageChanged","pageNumber","props","setCurrentPage","toggleIsFetching","get","currentPage","pageSize","then","response","setUsers","data","items","console","log","componentDidMount","setTotalUsersCount","totalCount","render","isFetching","spinner","totalUsersCount","users","follow","unfollow","mapStateToProps","state","usersPage","mapDispatchToProps","dispatch","userId"],"mappings":"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","sourcesContent":["import React from 'react';\nimport * as axios from 'axios';\nimport { connect } from 'react-redux';\nimport Users from './users';\nimport { followAC, unfollowAC, setUsersAC, setCurrentPageAC, setUsersTotalCountAC, toggleIsFetchingAC } from '../../redux/users-reducer';\nimport spinner from '../images/Spinner-1s-200px.svg';\n\nclass UsersContainer extends React.Component {\n\n    componentDidMount() {\n        this.props.toggleIsFetching(true);\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`)\n            .then(response => {\n                this.props.toggleIsFetching(false);\n                this.props.setUsers(response.data.items);\n                this.props.setTotalUsersCount(response.data.totalCount);\n        });\n    }\n\n    onPageChanged = (pageNumber) => {\n        this.props.setCurrentPage(pageNumber); \n        this.props.toggleIsFetching(true);\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`)\n            .then(response => {\n                this.props.toggleIsFetching(false);\n                this.props.setUsers(response.data.items);\n                console.log(response.data.items)\n        });\n    }\n    \n\n    render() {\n        return <>\n            { this.props.isFetching ? <img src={ spinner } alt='spinner'/> : null }\n            <Users totalUsersCount={ this.props.totalUsersCount} \n                    pagesSize={ this.props.pageSize }\n                    currentPage={ this.props.currentPage }\n                    onPageChanged={ this.props.onPageChanged }\n                    users={ this.props.users }\n                    follow={ this.props.follow }\n                    unfollow={ this.props.unfollow }\n            />\n        </>\n    }\n} \n\n\nlet mapStateToProps = (state) => {\n    return {\n        users: state.usersPage.users,\n        pageSize: state.usersPage.pageSize,\n        totalUsersCount: state.usersPage.totalUsersCount,\n        currentPage: state.usersPage.currentPage,\n        isFetching: state.usersPage.isFetching\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        follow: (userId) => {\n            dispatch(followAC(userId));\n        },\n        unfollow: (userId) => {\n            dispatch(unfollowAC(userId));\n        },\n        setUsers: (users) => {\n            dispatch(setUsersAC(users));\n        },\n        setCurrentPage: (pageNumber) => {\n            dispatch(setCurrentPageAC(pageNumber))\n        },\n        setTotalUsersCount: (totalCount) => {\n            dispatch(setUsersTotalCountAC(totalCount))\n        },\n        toggleIsFetching: (isFetching) => {\n            dispatch(toggleIsFetchingAC(isFetching));\n        }\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContainer);"]},"metadata":{},"sourceType":"module"}