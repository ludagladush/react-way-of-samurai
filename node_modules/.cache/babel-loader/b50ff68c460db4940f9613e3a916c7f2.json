{"ast":null,"code":"var _jsxFileName = \"/Users/ludagladushina/react-apps/react-learning-1/src/components/profile/profile-container.js\";\nimport React from 'react';\nimport Profile from './profile';\nimport { connect } from 'react-redux';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport { getUserProfile, getStatus, u } from '../../redux/profile-reducer';\nimport { withAuthRedirect } from '../../hoc/auth-redirect';\nimport { compose } from 'redux';\n\nclass ProfileContainer extends React.Component {\n  componentDidMount() {\n    let userId = this.props.match.params.userId;\n\n    if (!userId) {\n      userId = 12930;\n    }\n\n    this.props.getUserProfile(userId);\n    this.props.getUserStatus(userId);\n  }\n\n  render() {\n    if (!this.props.isAuth) return /*#__PURE__*/React.createElement(Redirect, {\n      to: '/login',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 40\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Profile, Object.assign({}, this.props, {\n      profile: this.props.profile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    })));\n  }\n\n}\n\n;\n\nlet mapStateToProps = state => ({\n  profile: state.profilePage.profile,\n  status: state.profilePage.status\n});\n\nexport default compose(connect(mapStateToProps, {\n  getUserProfile,\n  getStatus,\n  updateStatus\n}), withRouter, withAuthRedirect)(ProfileContainer);","map":{"version":3,"sources":["/Users/ludagladushina/react-apps/react-learning-1/src/components/profile/profile-container.js"],"names":["React","Profile","connect","withRouter","Redirect","getUserProfile","getStatus","u","withAuthRedirect","compose","ProfileContainer","Component","componentDidMount","userId","props","match","params","getUserStatus","render","isAuth","profile","mapStateToProps","state","profilePage","status","updateStatus"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,kBAArC;AACA,SAASC,cAAT,EAAyBC,SAAzB,EAAoCC,CAApC,QAA6C,6BAA7C;AACA,SAASC,gBAAT,QAAiC,yBAAjC;AACA,SAASC,OAAT,QAAwB,OAAxB;;AAIA,MAAMC,gBAAN,SAA+BV,KAAK,CAACW,SAArC,CAA+C;AAE3CC,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAArC;;AACA,QAAI,CAACA,MAAL,EAAa;AACTA,MAAAA,MAAM,GAAG,KAAT;AACH;;AACD,SAAKC,KAAL,CAAWT,cAAX,CAA0BQ,MAA1B;AACA,SAAKC,KAAL,CAAWG,aAAX,CAAyBJ,MAAzB;AACH;;AAEDK,EAAAA,MAAM,GAAI;AACN,QAAI,CAAC,KAAKJ,KAAL,CAAWK,MAAhB,EAAwB,oBAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAE,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACxB,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,OAAD,oBAAc,KAAKL,KAAnB;AAA2B,MAAA,OAAO,EAAG,KAAKA,KAAL,CAAWM,OAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ,CADJ;AAMH;;AAnB0C;;AAoB9C;;AAED,IAAIC,eAAe,GAAIC,KAAD,KAAY;AAC9BF,EAAAA,OAAO,EAAEE,KAAK,CAACC,WAAN,CAAkBH,OADG;AAE9BI,EAAAA,MAAM,EAAEF,KAAK,CAACC,WAAN,CAAkBC;AAFI,CAAZ,CAAtB;;AAMA,eAAef,OAAO,CAClBP,OAAO,CAACmB,eAAD,EAAkB;AAAEhB,EAAAA,cAAF;AAAkBC,EAAAA,SAAlB;AAA6BmB,EAAAA;AAA7B,CAAlB,CADW,EAElBtB,UAFkB,EAGlBK,gBAHkB,CAAP,CAIbE,gBAJa,CAAf","sourcesContent":["import React from 'react';\nimport Profile from './profile';\nimport { connect } from 'react-redux';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport { getUserProfile, getStatus, u } from '../../redux/profile-reducer';\nimport { withAuthRedirect } from '../../hoc/auth-redirect';\nimport { compose } from 'redux';\n\n\n\nclass ProfileContainer extends React.Component {\n\n    componentDidMount() {\n        let userId = this.props.match.params.userId;\n        if (!userId) {\n            userId = 12930;\n        }\n        this.props.getUserProfile(userId);\n        this.props.getUserStatus(userId);\n    }\n\n    render () {\n        if (!this.props.isAuth) return <Redirect to={'/login'} />;\n        return (\n            <div>\n                <Profile { ...this.props } profile={ this.props.profile }/>\n                \n          </div>\n        )\n    }\n};\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status\n});\n\n\nexport default compose(\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\n    withRouter,\n    withAuthRedirect\n)(ProfileContainer);"]},"metadata":{},"sourceType":"module"}