{"ast":null,"code":"var _jsxFileName = \"/Users/ludagladushina/react-apps/react-learning-1/src/components/login/login.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { required } from '../../utils/validators/validators';\nimport { Input } from '../common/FormsControls/forms-controls';\nimport { login } from '../../redux/auth-reducer';\nimport { Redirect } from 'react-router-dom';\nimport s from '../common/FormsControls/form-controls.module.css';\nimport { createField } from '../common/FormsControls';\n\nconst LoginForm = ({\n  handleSubmit,\n  error\n}) => {\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, createField('Email', [required], Input, 'email'), createField('Password', [required], Input, 'password', {\n    type: 'password'\n  }), createField(null, [required], Input, 'rememberMe', {\n    type: 'checkbox'\n  }, 'remember me'), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }), error && /*#__PURE__*/React.createElement(\"div\", {\n    className: s.formSummaryError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 24\n    }\n  }, error), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, \"Login\")));\n};\n\n_c = LoginForm;\nconst LoginReduxForm = reduxForm({\n  form: 'login'\n})(LoginForm);\n\nconst Login = props => {\n  const onSubmit = formData => {\n    props.login(formData.email, formData.password, formData.rememberMe);\n  };\n\n  if (props.isAuth) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: '/profile',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(LoginReduxForm, {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }));\n};\n\n_c2 = Login;\n\nconst mapStateToProps = state => ({\n  isAuth: state.auth.isAuth\n});\n\nexport default connect(mapStateToProps, {\n  login\n})(Login);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LoginForm\");\n$RefreshReg$(_c2, \"Login\");","map":{"version":3,"sources":["/Users/ludagladushina/react-apps/react-learning-1/src/components/login/login.js"],"names":["React","connect","Field","reduxForm","required","Input","login","Redirect","s","createField","LoginForm","handleSubmit","error","type","formSummaryError","LoginReduxForm","form","Login","props","onSubmit","formData","email","password","rememberMe","isAuth","mapStateToProps","state","auth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,SAASC,QAAT,QAAyB,mCAAzB;AACA,SAASC,KAAT,QAAsB,wCAAtB;AACA,SAASC,KAAT,QAAsB,0BAAtB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,CAAP,MAAc,kDAAd;AACA,SAASC,WAAT,QAA4B,yBAA5B;;AAGA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,CAAD,KAA6B;AAC3C,sBACI;AAAM,IAAA,QAAQ,EAAGD,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMF,WAAW,CAAC,OAAD,EAAU,CAACL,QAAD,CAAV,EAAsBC,KAAtB,EAA6B,OAA7B,CADjB,EAEMI,WAAW,CAAC,UAAD,EAAa,CAACL,QAAD,CAAb,EAAyBC,KAAzB,EAAgC,UAAhC,EAA4C;AAAEQ,IAAAA,IAAI,EAAE;AAAR,GAA5C,CAFjB,EAGMJ,WAAW,CAAC,IAAD,EAAO,CAACL,QAAD,CAAP,EAAmBC,KAAnB,EAA0B,YAA1B,EAAwC;AAAEQ,IAAAA,IAAI,EAAC;AAAP,GAAxC,EAA6D,aAA7D,CAHjB,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAoBMD,KAAK,iBAAI;AAAK,IAAA,SAAS,EAAGJ,CAAC,CAACM,gBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACJF,KADI,CApBf,eAuBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,CAvBJ,CADJ;AA6BH,CA9BD;;KAAMF,S;AAgCN,MAAMK,cAAc,GAAGZ,SAAS,CAAC;AAACa,EAAAA,IAAI,EAAE;AAAP,CAAD,CAAT,CAA2BN,SAA3B,CAAvB;;AAEA,MAAMO,KAAK,GAAIC,KAAD,IAAW;AACrB,QAAMC,QAAQ,GAAIC,QAAD,IAAc;AAC3BF,IAAAA,KAAK,CAACZ,KAAN,CAAYc,QAAQ,CAACC,KAArB,EAA4BD,QAAQ,CAACE,QAArC,EAA+CF,QAAQ,CAACG,UAAxD;AACH,GAFD;;AAIA,MAAIL,KAAK,CAACM,MAAV,EAAkB;AACd,wBAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAE,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AAED,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADG,eAEH,oBAAC,cAAD;AAAgB,IAAA,QAAQ,EAAGL,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFG,CAAP;AAIH,CAbD;;MAAMF,K;;AAeN,MAAMQ,eAAe,GAAIC,KAAD,KAAY;AAChCF,EAAAA,MAAM,EAAEE,KAAK,CAACC,IAAN,CAAWH;AADa,CAAZ,CAAxB;;AAIA,eAAevB,OAAO,CAACwB,eAAD,EAAkB;AAAEnB,EAAAA;AAAF,CAAlB,CAAP,CAAqCW,KAArC,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { required } from '../../utils/validators/validators';\nimport { Input } from '../common/FormsControls/forms-controls';\nimport { login } from '../../redux/auth-reducer';\nimport { Redirect } from 'react-router-dom';\nimport s from '../common/FormsControls/form-controls.module.css';\nimport { createField } from '../common/FormsControls';\n\n\nconst LoginForm = ({ handleSubmit, error }) => {\n    return (\n        <form onSubmit={ handleSubmit }>\n            { createField('Email', [required], Input, 'email') }\n            { createField('Password', [required], Input, 'password', { type: 'password' }) }\n            { createField(null, [required], Input, 'rememberMe', { type:'checkbox' }, 'remember me') }\n            <div></div>\n                {/* <Field placeholder={ 'Email' } \n                        validate={ [required] } \n                        component={ Input } \n                        name={ 'email' }/>\n            </div>\n            <div>\n                <Field placeholder={ 'Password ' } \n                        validate={ [required] } \n                        component={ Input }\n                        type={ 'password' } \n                        name={ 'password' }/>\n            </div>\n            <div>\n                <Field  type={ 'checkbox' } component={ Input } name={ 'rememberMe' }/> remember me\n            </div> */}\n            { error && <div className={ s.formSummaryError }>\n                {  error }\n            </div> } \n            <div>\n                <button>Login</button>\n            </div>\n        </form>\n    )\n}\n\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\n\nconst Login = (props) => {\n    const onSubmit = (formData) => {\n        props.login(formData.email, formData.password, formData.rememberMe);\n    }\n\n    if (props.isAuth) {\n        return <Redirect to={'/profile'} />\n    }\n    \n    return <div>\n        <h1>Login</h1>\n        <LoginReduxForm onSubmit={ onSubmit }/>\n    </div>\n}\n\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth\n})\n\nexport default connect(mapStateToProps, { login } )(Login);"]},"metadata":{},"sourceType":"module"}