{"ast":null,"code":"var _jsxFileName = \"/Users/ludagladushina/react-apps/react-learning-1/src/components/common/FormsControls/forms-controls.js\";\nimport React from 'react';\nimport styles from './form-controls.module.css';\n\nconst FormControl = props => {};\n\n_c = FormControl;\nexport const Textarea = ({\n  input,\n  meta,\n  ...props\n}) => {\n  const hasError = meta.touched && meta.error;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: hasError ? styles.error : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", Object.assign({}, input, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 18\n    }\n  }))), hasError && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 27\n    }\n  }, meta.error));\n};\n_c2 = Textarea;\nexport const Input = ({\n  input,\n  meta,\n  ...props\n}) => {\n  const hasError = meta.touched && meta.error;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: hasError ? styles.error : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", Object.assign({}, input, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 18\n    }\n  }))), hasError && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 27\n    }\n  }, meta.error));\n};\n_c3 = Input;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"FormControl\");\n$RefreshReg$(_c2, \"Textarea\");\n$RefreshReg$(_c3, \"Input\");","map":{"version":3,"sources":["/Users/ludagladushina/react-apps/react-learning-1/src/components/common/FormsControls/forms-controls.js"],"names":["React","styles","FormControl","props","Textarea","input","meta","hasError","touched","error","Input"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW,CAE9B,CAFD;;KAAMD,W;AAIN,OAAO,MAAME,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,IAAT;AAAe,KAAGH;AAAlB,CAAD,KAA+B;AAEnD,QAAMI,QAAQ,GAAGD,IAAI,CAACE,OAAL,IAAgBF,IAAI,CAACG,KAAtC;AACA,sBACI;AAAK,IAAA,SAAS,EAAGF,QAAQ,GAAGN,MAAM,CAACQ,KAAV,GAAkB,EAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAK,kDAAeJ,KAAf,EAA4BF,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAL,CADJ,EAEMI,QAAQ,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQD,IAAI,CAACG,KAAb,CAFlB,CADJ;AAMH,CATM;MAAML,Q;AAWb,OAAO,MAAMM,KAAK,GAAG,CAAC;AAAEL,EAAAA,KAAF;AAASC,EAAAA,IAAT;AAAe,KAAGH;AAAlB,CAAD,KAA+B;AAEhD,QAAMI,QAAQ,GAAGD,IAAI,CAACE,OAAL,IAAgBF,IAAI,CAACG,KAAtC;AACA,sBACI;AAAK,IAAA,SAAS,EAAGF,QAAQ,GAAGN,MAAM,CAACQ,KAAV,GAAkB,EAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAK,+CAAYJ,KAAZ,EAAyBF,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAL,CADJ,EAEMI,QAAQ,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQD,IAAI,CAACG,KAAb,CAFlB,CADJ;AAMH,CATM;MAAMC,K","sourcesContent":["import React from 'react';\nimport styles from './form-controls.module.css';\n\nconst FormControl = (props) => {\n    \n}\n\nexport const Textarea = ({ input, meta, ...props }) => {\n\n    const hasError = meta.touched && meta.error;\n    return (\n        <div className={ hasError ? styles.error : '' }>\n            <div><textarea { ...input } { ...props }/></div>\n            { hasError && <span>{ meta.error }</span> }\n        </div>\n    )\n}\n\nexport const Input = ({ input, meta, ...props }) => {\n\n    const hasError = meta.touched && meta.error;\n    return (\n        <div className={ hasError ? styles.error : '' }>\n            <div><input { ...input } { ...props }/></div>\n            { hasError && <span>{ meta.error }</span> }\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}