{"ast":null,"code":"import { usersAPI } from \"../api/api\";\nconst ADD_POST = 'ADD-POST';\nconst UPDATE_NEW_POST_TEXT = 'UPDATE_NEW_POST_TEXT';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nlet initialState = {\n  posts: [{\n    id: 1,\n    message: 'Hi, how are you?',\n    likes: 15\n  }, {\n    id: 2,\n    message: 'It\\'s my first post',\n    likes: 20\n  }, {\n    id: 3,\n    message: 'Dada',\n    likes: 21\n  }, {\n    id: 4,\n    message: 'Blabla',\n    likes: 6\n  }],\n  newPostText: '',\n  profile: null\n};\n\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      {\n        let newPost = {\n          id: 5,\n          message: state.newPostText,\n          likes: 0\n        };\n        return { ...state,\n          posts: [...state.posts, newPost],\n          newPostText: ''\n        };\n      }\n\n    case UPDATE_NEW_POST_TEXT:\n      {\n        return { ...state,\n          newPostText: action.newText\n        };\n      }\n\n    case SET_USER_PROFILE:\n      {\n        return { ...state,\n          profile: action.profile\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const addPostActionCreator = () => ({\n  type: ADD_POST\n});\nexport const updateNewPostTextActionCreator = text => ({\n  type: UPDATE_NEW_POST_TEXT,\n  newText: text\n});\nexport const setUserProfile = profile => ({\n  type: SET_USER_PROFILE,\n  profile\n});\nexport const getUserProfile = userId => dispatch => {\n  usersAPI.getProfile(userId).then();\n};\nexport default profileReducer;","map":{"version":3,"sources":["/Users/ludagladushina/react-apps/react-learning-1/src/redux/profile-reducer.js"],"names":["usersAPI","ADD_POST","UPDATE_NEW_POST_TEXT","SET_USER_PROFILE","initialState","posts","id","message","likes","newPostText","profile","profileReducer","state","action","type","newPost","newText","addPostActionCreator","updateNewPostTextActionCreator","text","setUserProfile","getUserProfile","userId","dispatch","getProfile","then"],"mappings":"AAAA,SAASA,QAAT,QAAyB,YAAzB;AAEA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,oBAAoB,GAAG,sBAA7B;AACA,MAAMC,gBAAgB,GAAG,kBAAzB;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,KAAK,EAAE,CACH;AAAEC,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,OAAO,EAAE,kBAAlB;AAAsCC,IAAAA,KAAK,EAAE;AAA7C,GADG,EAEH;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,OAAO,EAAE,qBAAlB;AAAyCC,IAAAA,KAAK,EAAE;AAAhD,GAFG,EAGH;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,OAAO,EAAE,MAAlB;AAA0BC,IAAAA,KAAK,EAAE;AAAjC,GAHG,EAIH;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,OAAO,EAAE,QAAlB;AAA4BC,IAAAA,KAAK,EAAE;AAAnC,GAJG,CADQ;AAOfC,EAAAA,WAAW,EAAE,EAPE;AAQfC,EAAAA,OAAO,EAAE;AARM,CAAnB;;AAWA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AACrD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKb,QAAL;AAAe;AACX,YAAIc,OAAO,GAAG;AACVT,UAAAA,EAAE,EAAE,CADM;AAEVC,UAAAA,OAAO,EAAEK,KAAK,CAACH,WAFL;AAGVD,UAAAA,KAAK,EAAE;AAHG,SAAd;AAKA,eAAO,EACH,GAAGI,KADA;AAEHP,UAAAA,KAAK,EAAE,CAAC,GAAGO,KAAK,CAACP,KAAV,EAAiBU,OAAjB,CAFJ;AAGHN,UAAAA,WAAW,EAAE;AAHV,SAAP;AAKH;;AACD,SAAKP,oBAAL;AAA2B;AACvB,eAAO,EACH,GAAGU,KADA;AAEHH,UAAAA,WAAW,EAAEI,MAAM,CAACG;AAFjB,SAAP;AAIH;;AAED,SAAKb,gBAAL;AAAuB;AACnB,eAAM,EACF,GAAGS,KADD;AACQF,UAAAA,OAAO,EAAEG,MAAM,CAACH;AADxB,SAAN;AAGH;;AACD;AACI,aAAOE,KAAP;AA1BR;AA4BH,CA7BD;;AA+BA,OAAO,MAAMK,oBAAoB,GAAG,OAAO;AAAEH,EAAAA,IAAI,EAAEb;AAAR,CAAP,CAA7B;AACP,OAAO,MAAMiB,8BAA8B,GAAIC,IAAD,KAC3C;AAAEL,EAAAA,IAAI,EAAEZ,oBAAR;AAA8Bc,EAAAA,OAAO,EAAEG;AAAvC,CAD2C,CAAvC;AAEP,OAAO,MAAMC,cAAc,GAAIV,OAAD,KAAc;AAAEI,EAAAA,IAAI,EAAEX,gBAAR;AAA0BO,EAAAA;AAA1B,CAAd,CAAvB;AAEP,OAAO,MAAMW,cAAc,GAAIC,MAAD,IAAaC,QAAD,IAAc;AACpDvB,EAAAA,QAAQ,CAACwB,UAAT,CAAoBF,MAApB,EAA4BG,IAA5B;AACH,CAFM;AAIP,eAAed,cAAf","sourcesContent":["import { usersAPI } from \"../api/api\";\n\nconst ADD_POST = 'ADD-POST';\nconst UPDATE_NEW_POST_TEXT = 'UPDATE_NEW_POST_TEXT';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\n\nlet initialState = {\n    posts: [\n        { id: 1, message: 'Hi, how are you?', likes: 15 },\n        { id: 2, message: 'It\\'s my first post', likes: 20 },\n        { id: 3, message: 'Dada', likes: 21 },\n        { id: 4, message: 'Blabla', likes: 6 }\n      ],\n    newPostText: '',\n    profile: null\n};\n\nconst profileReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case ADD_POST: {\n            let newPost = {\n                id: 5,\n                message: state.newPostText,\n                likes: 0\n            };\n            return { \n                ...state,\n                posts: [...state.posts, newPost],\n                newPostText: ''\n            }\n        }\n        case UPDATE_NEW_POST_TEXT: {\n            return { \n                ...state,\n                newPostText: action.newText\n            } \n        }\n\n        case SET_USER_PROFILE: {\n            return{\n                ...state, profile: action.profile\n            }\n        }\n        default: \n            return state;\n    }\n}\n\nexport const addPostActionCreator = () => ({ type: ADD_POST });\nexport const updateNewPostTextActionCreator = (text) => \n  ({ type: UPDATE_NEW_POST_TEXT, newText: text });\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile });\n\nexport const getUserProfile = (userId) => (dispatch) => {\n    usersAPI.getProfile(userId).then()\n}\n\nexport default profileReducer;"]},"metadata":{},"sourceType":"module"}