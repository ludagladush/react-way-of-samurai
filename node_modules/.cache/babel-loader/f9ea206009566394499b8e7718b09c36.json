{"ast":null,"code":"const FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_USERS_TOTAL_COUNT = 'SET_USERS_TOTAL_COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nlet initialState = {\n  users: [],\n  pageSize: 5,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFetching: true\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: true\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case UNFOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: false\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case SET_USERS:\n      {\n        return { ...state,\n          users: action.users\n        };\n      }\n\n    case SET_CURRENT_PAGE:\n      {\n        return { ...state,\n          currentPage: action.currentPage\n        };\n      }\n\n    case SET_USERS_TOTAL_COUNT:\n      {\n        return { ...state,\n          totalUsersCount: action.count\n        };\n      }\n\n    case TOGGLE_IS_FETCHING:\n      {\n        return { ...state,\n          isFetching: action.isFetching\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const followAC = userId => ({\n  type: 'FOLLOW',\n  userId\n});\nexport const unfollowAC = userId => ({\n  type: 'UNFOLLOW',\n  userId\n});\nexport const setUsersAC = users => ({\n  type: 'SET_USERS',\n  users\n});\nexport const setCurrentPageAC = currentPage => ({\n  type: SET_CURRENT_PAGE,\n  currentPage\n});\nexport const setUsersTotalCountAC = totalUsersCount => ({\n  type: SET_USERS_TOTAL_COUNT,\n  count: totalUsersCount\n});\nexport const toggleIsFetchingAC = userId => ({\n  type: 'TOGGLE_IS_FETCHING',\n  userId\n});\nexport default usersReducer;","map":{"version":3,"sources":["/Users/ludagladushina/react-apps/react-learning-1/src/redux/users-reducer.js"],"names":["FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_USERS_TOTAL_COUNT","TOGGLE_IS_FETCHING","initialState","users","pageSize","totalUsersCount","currentPage","isFetching","usersReducer","state","action","type","map","u","id","userId","followed","count","followAC","unfollowAC","setUsersAC","setCurrentPageAC","setUsersTotalCountAC","toggleIsFetchingAC"],"mappings":"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","sourcesContent":["const FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_USERS_TOTAL_COUNT = 'SET_USERS_TOTAL_COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\n\nlet initialState = {\n    users: [],\n    pageSize: 5,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: true\n}\n\nconst usersReducer = (state = initialState, action) => {\n\n    switch(action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users: state.users.map( u => {\n                    if (u.id === action.userId) {\n                        return {  ...u, followed: true }\n                    }\n                    return u;\n                })\n            }          \n\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: state.users.map( u => {\n                    if (u.id === action.userId) {\n                        return { ...u, followed: false }\n                    }\n                    return u;\n                })\n            }\n\n        case SET_USERS: {\n            return { ...state, users: action.users };\n        }\n        \n        case SET_CURRENT_PAGE: {\n            return { ...state, currentPage: action.currentPage };\n        }\n\n        case SET_USERS_TOTAL_COUNT: {\n            return { ...state, totalUsersCount: action.count };\n        }\n\n        case TOGGLE_IS_FETCHING: {\n            return { ...state, isFetching: action.isFetching };\n        }\n\n\n        default: \n            return state;\n\n    }\n};\n\nexport const followAC = (userId) => ({ type: 'FOLLOW', userId });\nexport const unfollowAC = (userId) => ({ type: 'UNFOLLOW', userId });\nexport const setUsersAC = (users) => ({ type: 'SET_USERS', users });\nexport const setCurrentPageAC = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage });\nexport const setUsersTotalCountAC = (totalUsersCount) => ({ type: SET_USERS_TOTAL_COUNT, count: totalUsersCount })\nexport const toggleIsFetchingAC  = (userId) => ({ type: 'TOGGLE_IS_FETCHING', userId });\n\nexport default usersReducer;"]},"metadata":{},"sourceType":"module"}