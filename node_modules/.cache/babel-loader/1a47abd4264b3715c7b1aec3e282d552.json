{"ast":null,"code":"import { getAuthUserData } from \"./auth-reducer\";\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS ';\nlet initialState = {\n  initialized: false\n};\n\nconst appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case INITIALIZED_SUCCESS:\n      return { ...state,\n        initialized: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const initializedSuccess = () => ({\n  type: INITIALIZED_SUCCESS\n});\nexport const initializeApp = () => dispatch => {\n  let promise = dispatch(getAuthUserData());\n  Promise.all([promise]).then(() => {\n    dispatch(initializedSuccess());\n  });\n};\nexport default appReducer;","map":{"version":3,"sources":["/Users/ludagladushina/react-apps/react-learning-1/src/redux/app-reducer.js"],"names":["getAuthUserData","INITIALIZED_SUCCESS","initialState","initialized","appReducer","state","action","type","initializedSuccess","initializeApp","dispatch","promise","Promise","all","then"],"mappings":"AAAA,SAASA,eAAT,QAAgC,gBAAhC;AAEA,MAAMC,mBAAmB,GAAG,sBAA5B;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,WAAW,EAAE;AADE,CAAnB;;AAIA,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AACjD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,mBAAL;AACI,aAAO,EACH,GAAGI,KADA;AAEHF,QAAAA,WAAW,EAAE;AAFV,OAAP;;AAIJ;AACI,aAAOE,KAAP;AAPR;AASH,CAVD;;AAYA,OAAO,MAAMG,kBAAkB,GAAG,OAAO;AAAED,EAAAA,IAAI,EAAEN;AAAR,CAAP,CAA3B;AAEP,OAAO,MAAMQ,aAAa,GAAG,MAAOC,QAAD,IAAc;AAC7C,MAAIC,OAAO,GAAGD,QAAQ,CAACV,eAAe,EAAhB,CAAtB;AACAY,EAAAA,OAAO,CAACC,GAAR,CAAY,CAACF,OAAD,CAAZ,EACKG,IADL,CACU,MAAM;AACRJ,IAAAA,QAAQ,CAACF,kBAAkB,EAAnB,CAAR;AACH,GAHL;AAIH,CANM;AAQP,eAAeJ,UAAf","sourcesContent":["import { getAuthUserData } from \"./auth-reducer\";\n\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS ';\n\nlet initialState = {\n    initialized: false\n}\n\nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case INITIALIZED_SUCCESS :\n            return {\n                ...state ,\n                initialized: true\n            }\n        default:\n            return state;\n    }\n}\n\nexport const initializedSuccess = () => ({ type: INITIALIZED_SUCCESS });\n\nexport const initializeApp = () => (dispatch) => {\n    let promise = dispatch(getAuthUserData());\n    Promise.all([promise])\n        .then(() => {\n            dispatch(initializedSuccess());\n        });\n}\n\nexport default appReducer;"]},"metadata":{},"sourceType":"module"}