{"ast":null,"code":"var _jsxFileName = \"/Users/ludagladushina/react-apps/react-learning-1/src/components/profile/profile-container.js\";\nimport React from 'react';\nimport Profile from './profile';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { getUserProfile, getStatus, updateStatus } from '../../redux/profile-reducer';\nimport { compose } from 'redux';\n\nclass ProfileContainer extends React.Component {\n  componentDidMount() {\n    console.log(this.props);\n    let userId = this.props.match.params.userId; // if (!userId) {\n    //     userId = this.props.authorizedUserId;\n    //     if (!userId) {\n    //         this.props.history.push('/login');\n    //     }\n    // }\n    //this.props.getUserProfile(userId);\n    //this.props.getStatus(userId);\n  }\n\n  render() {\n    // if (!this.props.isAuth) return <Redirect to={'/login'} />;\n    return /*#__PURE__*/React.createElement(Profile, Object.assign({}, this.props, {\n      profile: this.props.profile,\n      status: this.props.status,\n      updateStatus: this.props.updateStatus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorizedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth\n  };\n};\n\nexport default compose(connect(mapStateToProps, {\n  getUserProfile,\n  getStatus,\n  updateStatus\n}), withRouter)(ProfileContainer);","map":{"version":3,"sources":["/Users/ludagladushina/react-apps/react-learning-1/src/components/profile/profile-container.js"],"names":["React","Profile","connect","withRouter","getUserProfile","getStatus","updateStatus","compose","ProfileContainer","Component","componentDidMount","console","log","props","userId","match","params","render","profile","status","mapStateToProps","state","profilePage","authorizedUserId","auth","isAuth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,cAAT,EAAyBC,SAAzB,EAAoCC,YAApC,QAAwD,6BAAxD;AACA,SAASC,OAAT,QAAwB,OAAxB;;AAIA,MAAMC,gBAAN,SAA+BR,KAAK,CAACS,SAArC,CAA+C;AAE3CC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACA,QAAIC,MAAM,GAAG,KAAKD,KAAL,CAAWE,KAAX,CAAiBC,MAAjB,CAAwBF,MAArC,CAFgB,CAGhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AAEDG,EAAAA,MAAM,GAAI;AACN;AACA,wBACQ,oBAAC,OAAD,oBAAc,KAAKJ,KAAnB;AACQ,MAAA,OAAO,EAAG,KAAKA,KAAL,CAAWK,OAD7B;AAEQ,MAAA,MAAM,EAAG,KAAKL,KAAL,CAAWM,MAF5B;AAGQ,MAAA,YAAY,EAAG,KAAKN,KAAL,CAAWP,YAHlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADR;AAMH;;AAvB0C;;AA0B/C,IAAIc,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAQ;AACJH,IAAAA,OAAO,EAAEG,KAAK,CAACC,WAAN,CAAkBJ,OADvB;AAEJC,IAAAA,MAAM,EAAEE,KAAK,CAACC,WAAN,CAAkBH,MAFtB;AAGJI,IAAAA,gBAAgB,EAAEF,KAAK,CAACG,IAAN,CAAWV,MAHzB;AAIJW,IAAAA,MAAM,EAAEJ,KAAK,CAACG,IAAN,CAAWC;AAJf,GAAR;AAMH,CAPD;;AAUA,eAAelB,OAAO,CAClBL,OAAO,CAACkB,eAAD,EAAkB;AAAEhB,EAAAA,cAAF;AAAkBC,EAAAA,SAAlB;AAA6BC,EAAAA;AAA7B,CAAlB,CADW,EAElBH,UAFkB,CAAP,CAGbK,gBAHa,CAAf","sourcesContent":["import React from 'react';\nimport Profile from './profile';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { getUserProfile, getStatus, updateStatus } from '../../redux/profile-reducer';\nimport { compose } from 'redux';\n\n\n\nclass ProfileContainer extends React.Component {\n\n    componentDidMount() {\n        console.log(this.props)\n        let userId = this.props.match.params.userId;\n        // if (!userId) {\n        //     userId = this.props.authorizedUserId;\n        //     if (!userId) {\n        //         this.props.history.push('/login');\n        //     }\n        // }\n        //this.props.getUserProfile(userId);\n        //this.props.getStatus(userId);\n    }\n\n    render () {\n        // if (!this.props.isAuth) return <Redirect to={'/login'} />;\n        return (\n                <Profile { ...this.props } \n                        profile={ this.props.profile } \n                        status={ this.props.status } \n                        updateStatus={ this.props.updateStatus }/>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return ({\n        profile: state.profilePage.profile,\n        status: state.profilePage.status,\n        authorizedUserId: state.auth.userId, \n        isAuth: state.auth.isAuth\n    });\n}\n\n\nexport default compose(\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\n    withRouter\n)(ProfileContainer);"]},"metadata":{},"sourceType":"module"}