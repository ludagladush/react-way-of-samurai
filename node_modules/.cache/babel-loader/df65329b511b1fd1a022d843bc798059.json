{"ast":null,"code":"import React from 'react';\nimport { sendMessageCreator, updateNewMessageBodyCreator } from '../../redux/dialogs-reducer';\nimport Dialogs from './dialogs';\nimport StoreContext from '../../store-context';\nimport { connect } from 'react-redux'; // const DialogsContainer = () => {\n//     return (\n//         <StoreContext.Consumer>\n//             { store => {\n//                     let state = store.getState().dialogsPage;\n//                     let onSendMessageClick = () => {\n//                         store.dispatch(sendMessageCreator());\n//                     };\n//                     let onNewMessageChange = (body) => {\n//                         store.dispatch(updateNewMessageBodyCreator(body));\n//                     };\n//                     return(\n//                         <Dialogs updateNewMessage={ onNewMessageChange }\n//                         sendMessage={ onSendMessageClick }\n//                         dialogsPage={ state }\n//                         />\n//                     )\n//                 }\n//             }\n//         </StoreContext.Consumer>\n//     )\n// };\n\nlet mapStateToProps = state => {\n  return {\n    dialodsPage: state.dialogsPage\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    updateNewMessage: body => {\n      dispatch(updateNewMessageBodyCreator(body));\n    },\n    sendMessage: () => {\n      dispatch(sendMessageCreator());\n    }\n  };\n};\n\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\nexport default DialogsContainer;","map":{"version":3,"sources":["/Users/ludagladushina/react-apps/react-learning-1/src/components/dialogs/dialogs-container.js"],"names":["React","sendMessageCreator","updateNewMessageBodyCreator","Dialogs","StoreContext","connect","mapStateToProps","state","dialodsPage","dialogsPage","mapDispatchToProps","dispatch","updateNewMessage","body","sendMessage","DialogsContainer"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,EAA6BC,2BAA7B,QAA+D,6BAA/D;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAGA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHC,IAAAA,WAAW,EAAED,KAAK,CAACE;AADhB,GAAP;AAGH,CAJD;;AAMA,IAAIC,kBAAkB,GAAIC,QAAD,IAAc;AACnC,SAAO;AACHC,IAAAA,gBAAgB,EAAGC,IAAD,IAAU;AACxBF,MAAAA,QAAQ,CAACT,2BAA2B,CAACW,IAAD,CAA5B,CAAR;AACH,KAHE;AAIHC,IAAAA,WAAW,EAAE,MAAM;AACfH,MAAAA,QAAQ,CAACV,kBAAkB,EAAnB,CAAR;AACH;AANE,GAAP;AAQH,CATD;;AAWA,MAAMc,gBAAgB,GAAGV,OAAO,CAACC,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CP,OAA7C,CAAzB;AAEA,eAAeY,gBAAf","sourcesContent":["import React from 'react';\nimport { sendMessageCreator, updateNewMessageBodyCreator} from '../../redux/dialogs-reducer';\nimport Dialogs from './dialogs';\nimport StoreContext from '../../store-context';\nimport { connect } from 'react-redux';\n\n\n// const DialogsContainer = () => {\n\n//     return (\n//         <StoreContext.Consumer>\n//             { store => {\n//                     let state = store.getState().dialogsPage;\n        \n//                     let onSendMessageClick = () => {\n//                         store.dispatch(sendMessageCreator());\n//                     };\n\n//                     let onNewMessageChange = (body) => {\n//                         store.dispatch(updateNewMessageBodyCreator(body));\n//                     };\n//                     return(\n//                         <Dialogs updateNewMessage={ onNewMessageChange }\n//                         sendMessage={ onSendMessageClick }\n//                         dialogsPage={ state }\n//                         />\n//                     )\n//                 }\n//             }\n//         </StoreContext.Consumer>\n//     )\n// };\n\nlet mapStateToProps = (state) => {\n    return {\n        dialodsPage: state.dialogsPage \n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        updateNewMessage: (body) => {\n            dispatch(updateNewMessageBodyCreator(body));\n        },\n        sendMessage: () => {\n            dispatch(sendMessageCreator());\n        }\n    }\n}\n\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\n\nexport default DialogsContainer;"]},"metadata":{},"sourceType":"module"}