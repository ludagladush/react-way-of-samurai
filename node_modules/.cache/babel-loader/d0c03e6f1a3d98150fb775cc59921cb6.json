{"ast":null,"code":"var _jsxFileName = \"/Users/ludagladushina/react-apps/react-learning-1/src/components/users/users-container.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Users from './users';\nimport { follow, unfollow, setUsers, setCurrentPage, setTotalUsersCount, toggleIsFetching, toggleFollowingProgress } from '../../redux/users-reducer';\nimport Preloader from '../preloader/preloader';\nimport { usersAPI } from '../../api/api';\n\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      this.props.setCurrentPage(pageNumber);\n      this.props.toggleIsFetching(true);\n      usersAPI.getUsers(pageNumber, this.props.pageSize).then(data => {\n        this.props.toggleIsFetching(false);\n        this.props.setUsers(data.items);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.toggleIsFetching(true);\n    usersAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data => {\n      this.props.toggleIsFetching(false);\n      this.props.setUsers(data.items);\n      this.props.setTotalUsersCount(data.totalCount);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.props.isFetching ? /*#__PURE__*/React.createElement(Preloader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 39\n      }\n    }) : null, /*#__PURE__*/React.createElement(Users, {\n      totalUsersCount: this.props.totalUsersCount,\n      pageSize: this.props.pageSize,\n      currentPage: this.props.currentPage,\n      onPageChanged: this.onPageChanged,\n      users: this.props.users,\n      follow: this.props.follow,\n      unfollow: this.props.unfollow,\n      followingInProgress: this.props.followingInProgress,\n      toggleFollowingProgress: this.props.toggleFollowingProgress,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching,\n    followingInProgress: state.usersPage.followingInProgress\n  };\n};\n\nexport default connect(mapStateToProps, {\n  follow,\n  unfollow,\n  setUsers,\n  setCurrentPage,\n  setTotalUsersCount,\n  toggleIsFetching,\n  toggleFollowingProgress,\n  getUsersThunkCreator\n})(UsersContainer);","map":{"version":3,"sources":["/Users/ludagladushina/react-apps/react-learning-1/src/components/users/users-container.js"],"names":["React","connect","Users","follow","unfollow","setUsers","setCurrentPage","setTotalUsersCount","toggleIsFetching","toggleFollowingProgress","Preloader","usersAPI","UsersContainer","Component","onPageChanged","pageNumber","props","getUsers","pageSize","then","data","items","componentDidMount","currentPage","totalCount","render","isFetching","totalUsersCount","users","followingInProgress","mapStateToProps","state","usersPage","getUsersThunkCreator"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport Users from './users';\nimport { follow, unfollow, setUsers, setCurrentPage, setTotalUsersCount, toggleIsFetching, toggleFollowingProgress } from '../../redux/users-reducer';\nimport Preloader from '../preloader/preloader';\nimport { usersAPI } from '../../api/api';\n\nclass UsersContainer extends React.Component {\n\n    componentDidMount() {\n        this.props.toggleIsFetching(true);\n        usersAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data => {\n            this.props.toggleIsFetching(false);\n            this.props.setUsers(data.items);\n            this.props.setTotalUsersCount(data.totalCount);\n        });\n    }\n\n    onPageChanged = (pageNumber) => {\n        this.props.setCurrentPage(pageNumber); \n        this.props.toggleIsFetching(true);\n\n        usersAPI.getUsers(pageNumber, this.props.pageSize)\n            .then(data => {\n            this.props.toggleIsFetching(false);\n            this.props.setUsers(data.items);\n                \n                \n        });\n    }\n    \n\n    render() {\n\n        return <>\n            { this.props.isFetching ? <Preloader /> : null }\n            <Users totalUsersCount={ this.props.totalUsersCount} \n                    pageSize={ this.props.pageSize }\n                    currentPage={ this.props.currentPage }\n                    onPageChanged={ this.onPageChanged }\n                    users={ this.props.users }\n                    follow={ this.props.follow }\n                    unfollow={ this.props.unfollow }\n                    followingInProgress={ this.props.followingInProgress }\n                    toggleFollowingProgress={ this.props.toggleFollowingProgress }\n            />\n        </>\n    }\n} \n\n\nlet mapStateToProps = (state) => {\n    return {\n        users: state.usersPage.users,\n        pageSize: state.usersPage.pageSize,\n        totalUsersCount: state.usersPage.totalUsersCount,\n        currentPage: state.usersPage.currentPage,\n        isFetching: state.usersPage.isFetching,\n        followingInProgress: state.usersPage.followingInProgress\n    }\n}\n\n\nexport default connect(mapStateToProps, {\n    follow,\n    unfollow,\n    setUsers,\n    setCurrentPage,\n    setTotalUsersCount,\n    toggleIsFetching,\n    toggleFollowingProgress,\n    getUsersThunkCreator\n})(UsersContainer);"]},"metadata":{},"sourceType":"module"}